<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:ni="urn:ni">
  <assembly>
    <name>NationalInstruments.UI.WindowsForms</name>
  </assembly>
  <members>
    <member name="T:NationalInstruments.UI.WindowsForms.Boolean">
      <summary>
            Provides an abstract base class for all Boolean controls.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.ControlBase">
      <summary>
            Provides an abstract base class for Measurement Studio Windows Forms controls.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.#ctor">
      <summary>
            Initializes a new instance of the ControlBase class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.ResetBackColor">
      <summary>
            Resets the background color to its default value.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.ResetFont">
      <summary>
            Resets the font to its default value.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.ResetForeColor">
      <summary>
            Resets the foreground color to its default value.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the ControlBase 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.GetService(System.Type)">
      <summary>
            Returns an object that represents a service provided by the control or by its container.
            </summary>
      <param name="service">
            A service provided by the control.
            </param>
      <returns>
            An Object that represents a service provided by the control.  This value is
            null if the control does not provide the specified service.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Raises the Paint event.
            </summary>
      <param name="e">
            A PaintEventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Paints the background of the control.
            </summary>
      <param name="pe">
            A PaintEventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Raises the MouseMove event.
            </summary>
      <param name="e">
            A MouseEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnBackgroundImageAlignmentChanged(System.EventArgs)">
      <summary>
            Raises the BackgroundImageAlignmentChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnImmediateUpdatesChanged(System.EventArgs)">
      <summary>
            Raises the ImmediateUpdatesChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnCaptionChanged(System.EventArgs)">
      <summary>
            Raises the CaptionChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnCaptionFontChanged(System.EventArgs)">
      <summary>
            Raises the CaptionFontChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnCaptionForeColorChanged(System.EventArgs)">
      <summary>
            Raises the CaptionForeColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnCaptionBackColorChanged(System.EventArgs)">
      <summary>
            Raises the CaptionBackColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnCaptionPositionChanged(System.EventArgs)">
      <summary>
            Raises the CaptionPositionChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnCaptionVerticalOrientationChanged(System.EventArgs)">
      <summary>
            Raises the CaptionVerticalOrientationChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnCaptionVisibleChanged(System.EventArgs)">
      <summary>
            Raises the CaptionVisibleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnBorderChanged(System.EventArgs)">
      <summary>
            Raises the BorderChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnCanShowFocusChanged(System.EventArgs)">
      <summary>
            Raises the CanShowFocusChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnInnerBoundsChanged(System.EventArgs)">
      <summary>
            Raises the InnerBoundsChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnHoverIntervalChanged(System.EventArgs)">
      <summary>
            Raises the HoverIntervalChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnBeforeDrawCaption(NationalInstruments.UI.BeforeDrawCaptionEventArgs)">
      <summary>
            Raises the BeforeDrawCaption event.
            </summary>
      <param name="e">
            A BeforeDrawCaptionEventArgs that contains the drawing data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.OnAfterDrawCaption(NationalInstruments.UI.AfterDrawCaptionEventArgs)">
      <summary>
            Raises the AfterDrawCaption event.
            </summary>
      <param name="e">
            An AfterDrawCaptionEventArgs that contains the drawing data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.BeginUpdate">
      <summary>
            Suspends the painting of the control until EndUpdate
            is called.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.EndUpdate">
      <summary>
            Resumes the painting of the control suspended by calling 
            BeginUpdate.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.Draw(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the control with the specified ComponentDrawArgs.
            </summary>
      <param name="args">
            A ComponentDrawArgs that contains the drawing data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">args (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.ToImage">
      <summary>
            Creates an image of the control.
            </summary>
      <returns>
            An Image that represents the control.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.ToImage(System.Drawing.Size)">
      <summary>
            Creates an image of the control with a specified size.
            </summary>
      <param name="size">
            A Size that specifies the width and height of the exported image.
            </param>
      <returns>
            An Image that represents the control.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.ToStream(System.IO.Stream,NationalInstruments.UI.ImageType)">
      <summary>
            Writes an image of the control to a stream.
            </summary>
      <param name="stream">
            A Stream to write the image to.
            </param>
      <param name="type">
            The format of the image.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">stream (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentNullException">type (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.ToStream(System.IO.Stream,NationalInstruments.UI.ImageType,System.Drawing.Size)">
      <summary>
            Writes an image of the control to a stream with a specified size.
            </summary>
      <param name="stream">
            A Stream to write the image to.
            </param>
      <param name="type">
            The format of the image.
            </param>
      <param name="size">
            A Size that specifies the width and height of the image that
            is written to the stream.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">stream (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentNullException">type (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.ToFile(System.String,NationalInstruments.UI.ImageType)">
      <summary>
            Writes an image of the control to a file.
            </summary>
      <param name="filename">
            The file path to write the image to.
            </param>
      <param name="type">
            The format of the image.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">filename (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentNullException">type (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.ToFile(System.String,NationalInstruments.UI.ImageType,System.Drawing.Size)">
      <summary>
            Writes an image of the control to a file with a specified size.
            </summary>
      <param name="filename">
            The file path to write the image to.
            </param>
      <param name="type">
            The format of the image.
            </param>
      <param name="size">
            A Size that specifies the width and height of the image that
            is written to the file.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">filename (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentNullException">type (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.ToClipboard">
      <summary>
            Copies a bitmap image of the control to the clipboard.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.ToClipboard(System.Drawing.Size)">
      <summary>
            Copies a bitmap image of the control to the clipboard with a specified size.
            </summary>
      <param name="size">
            A Size that specifies the width and height of the bitmap image that
            is copied to the clipboard.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.RaiseExceptionIfDisposed">
      <summary>
            This member is obsolete. Use the ThrowExceptionIfDisposed
            method to achieve the same functionality.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.ThrowExceptionIfDisposed">
      <summary>
            Throws an ObjectDisposedException if the object has been disposed.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.BeginInit">
      <summary>
            Signals to the object that initialization is beginning.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlBase.EndInit">
      <summary>
            Signals to the object that initialization is complete.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.DefaultSize">
      <summary>
            Gets the default size of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.CanShowFocus">
      <summary>
            Gets or sets a value indicating if the control draws a focus rectangle when the control has focus.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.Border">
      <summary>
            Gets or sets the border style of the control.
            </summary>
      <exception cref="T:System.ArgumentNullException">
            The specified Border is null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.BackColor">
      <summary>
            Gets or sets the background color of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.Cursor">
      <summary>
            Gets or sets the cursor that is displayed when the mouse pointer is over the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.BackgroundImage">
      <summary>
            Gets or sets the image to display in the background of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.BackgroundImageAlignment">
      <summary>
            Gets or sets the alignment of the background image of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not an ImageAlignment value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.Font">
      <summary>
            Gets or sets the font to apply to the text that is displayed by the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.ForeColor">
      <summary>
            Gets or sets the foreground color of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.Caption">
      <summary>
            Gets or sets the caption for the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.CaptionFont">
      <summary>
            Gets or sets the font of the caption that is displayed by the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.CaptionForeColor">
      <summary>
            Gets or sets the foreground color of the caption that is displayed by the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.CaptionBackColor">
      <summary>
            Gets or sets the background color of the caption that is displayed by the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.CaptionPosition">
      <summary>
            Gets or sets the position of the caption that is displayed by the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a CaptionPosition value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.CaptionVerticalOrientation">
      <summary>
            Gets or sets the orientation of the caption when displayed vertically to the left or right of the control.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The specified value is not a VerticalCaptionOrientation value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.CaptionVisible">
      <summary>
            Gets or sets a value indicating whether the caption is displayed by the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.ImmediateUpdates">
      <summary>
            Gets or sets a value indicating if the control updates immediately when invalidated.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.HoverInterval">
      <summary>
            Gets or sets the delay for the mouse hover event. 
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">TotalMilliseconds is greater than MaxValue.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlBase.InnerBounds">
      <summary>
            Gets a rectangle that represents the actual bounds of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlBase.BackgroundImageAlignmentChanged">
      <summary>
            Occurs when the value of BackgroundImageAlignment
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlBase.ImmediateUpdatesChanged">
      <summary>
            Occurs when the value of ImmediateUpdates 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlBase.CaptionChanged">
      <summary>
            Occurs when the value of Caption 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlBase.CaptionVerticalOrientationChanged">
      <summary>
            Occurs when the value of CaptionVerticalOrientation 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlBase.CaptionFontChanged">
      <summary>
            Occurs when the value of CaptionFont 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlBase.CaptionForeColorChanged">
      <summary>
            Occurs when the value of CaptionForeColor 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlBase.CaptionBackColorChanged">
      <summary>
            Occurs when the value of CaptionBackColor 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlBase.CaptionPositionChanged">
      <summary>
            Occurs when the value of CaptionPosition 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlBase.CaptionVisibleChanged">
      <summary>
            Occurs when the value of CaptionVisible 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlBase.BorderChanged">
      <summary>
            Occurs when the value of Border changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlBase.CanShowFocusChanged">
      <summary>
            Occurs when the value of CanShowFocus
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlBase.HoverIntervalChanged">
      <summary>
            Occurs when the value of HoverInterval
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlBase.InnerBoundsChanged">
      <summary>
            Occurs when the value of InnerBounds 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlBase.BeforeDrawCaption">
      <summary>
            Occurs before the caption is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlBase.AfterDrawCaption">
      <summary>
            Occurs after the caption is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Boolean.#ctor">
      <summary>
            Initializes a new instance of the Boolean class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Boolean.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by Boolean.
            </summary>
      <param name="disposing">
            If true, this method releases managed and unmanaged resources. If false, this method releases
            only unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Boolean.OnStateChanged(NationalInstruments.UI.ActionEventArgs)">
      <summary>
            Raises the StateChanged event.
            </summary>
      <param name="e">
            An ActionEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Boolean.OnStateChanging(NationalInstruments.UI.ActionCancelEventArgs)">
      <summary>
            Raises the StateChanging event.
            </summary>
      <param name="e">
            An ActionCancelEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Boolean.OnValueChanged(System.EventArgs)">
      <summary>
            Raises the ValueChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Boolean.OnInteractionModeChanged(System.EventArgs)">
      <summary>
            Raises the InteractionModeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Boolean.OnOnColorChanged(System.EventArgs)">
      <summary>
            Raises the OnColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Boolean.OnOffColorChanged(System.EventArgs)">
      <summary>
            Raises the OffColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Boolean.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Boolean.Value">
      <summary>
            Gets or sets the state of the Boolean control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Boolean.InteractionMode">
      <summary>
            Gets or sets the mouse or keyboard handling mechanism for the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The specified value not a BooleanInteractionMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Boolean.OnColor">
      <summary>
            Gets or sets the on color of the Boolean control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Boolean.OffColor">
      <summary>
            Gets or sets the off color of the Boolean control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Boolean.InteractionMouseCursors">
      <summary>
            Gets the collection of properties that you can use to customize mouse cursors for different interactions with the Boolean controls.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Boolean.StateChanged">
      <summary>
            Occurs after the value of Value has changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Boolean.StateChanging">
      <summary>
            Occurs before the value of Value changes, allowing for the change event to be canceled.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Boolean.ValueChanged">
      <summary>
            Occurs when the value of Value changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Boolean.InteractionModeChanged">
      <summary>
            Occurs when the value of InteractionMode changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Boolean.OnColorChanged">
      <summary>
            Occurs when the value of OnColor changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Boolean.OffColorChanged">
      <summary>
            Occurs when the value of OffColor changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.ControlArray`1">
      <summary>
            Provides the base class for controls that encapsulate other controls as an array.
            </summary>
      <typeparam name="TControl">
            The type of the control for which an array is created. The type must derive from
            Control, implement ICloneable and
            INotifyPropertyChanged, and specify a default constructor.
            </typeparam>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.#ctor">
      <summary>
            Initializes a new instance of the ControlArray&lt;T&gt; class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.EnableBasePropertyChangedEvents">
      <summary>
            Enables PropertyChanged event 
            to be raised when properties defined in the Control base class
            are changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.DisableBasePropertyChangedEvents">
      <summary>
            Disables the PropertyChanged event 
            that is raised when properties defined in the Control base class
            are changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the ControlArray&lt;T&gt; 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.GetService(System.Type)">
      <summary>
            Returns an object that represents a service provided by the control or by its container.
            </summary>
      <param name="service">
            A service provided by the control.
            </param>
      <returns>
            An Object that represents a service provided by the control.  This value is
            null if the control does not provide the specified service.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.UpdateItems">
      <summary>
            Updates the value of items in the control when the ScaleMode
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.Reset">
      <summary>
            Resets the items of the array to their initial state.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.CopyTo(`0[],System.Int32)">
      <summary>
            Copies the items of the control to the specified array, starting at the specified index.
            </summary>
      <param name="array">
            The 1D Array that is the destination of the items
            copied from the control.
            </param>
      <param name="arrayIndex">
            The zero-based index in array (parameter) at which copying begins.
            </param>
      <exception cref="T:System.ArgumentNullException">array (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex (parameter) is less than zero.
            </exception>
      <exception cref="T:System.ArgumentException">array (parameter) is multi-dimensional.
            
            -or-
            

arrayIndex (parameter) is equal to or greater than the length of array (parameter).
            


            -or-
            


            The number of items in the control is greater than the available space from
            arrayIndex (parameter) to the end of the destination array (parameter).
            


            -or-
            arrayIndex (parameter) is equal to or greater than the length of array (parameter).
            
            -or-
            
            The number of items in the control is greater than the available space from
            arrayIndex (parameter) to the end of the destination array (parameter).
            </exception>
      <exception cref="T:System.InvalidCastException">
            The type of the control cannot be cast automatically to the type of the destination
            array (parameter).
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.System#Collections#Generic#ICollection{TControl}#Contains(`0)">
      <summary>
            Determines whether the ICollection&lt;T&gt; contains a specific value.
            </summary>
      <param name="item">
            The object to locate in the ICollection&lt;T&gt;.
            </param>
      <returns>true if item is found in the ICollection&lt;T&gt;; otherwise, false.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.System#Collections#Generic#ICollection{TControl}#Add(`0)">
      <summary>
            Adding a control to the array through this method is not supported.
            </summary>
      <param name="item">
            The control to be added.
            </param>
      <exception cref="T:System.ObjectDisposedException">
                The object has been disposed.
            </exception>
      <exception cref="T:System.NotSupportedException">
                Always.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.System#Collections#Generic#ICollection{TControl}#Remove(`0)">
      <summary>
            Removing a control to the array through this method is not supported.
            </summary>
      <param name="item">
            The control to be removed.
            </param>
      <returns>The return value is not documented because this method is not supported.</returns>
      <exception cref="T:System.ObjectDisposedException">
                The object has been disposed.
            </exception>
      <exception cref="T:System.NotSupportedException">
                Always.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.System#Collections#Generic#ICollection{TControl}#Clear">
      <summary>
            Removes all items from the ICollection&lt;T&gt;.
            </summary>
      <exception cref="T:System.NotSupportedException">
            The ICollection&lt;T&gt; is read-only. 
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.System#Collections#Generic#IEnumerable{TControl}#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            An IEnumerator&lt;T&gt;  that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.GetEnumerator">
      <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
      <returns>
            An IEnumerator&lt;T&gt; that can
            be used to iterate through the collection.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.BeginUpdate">
      <summary>
            Suspends the painting of the control until EndUpdate
            is called.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.EndUpdate">
      <summary>
            Resumes the painting of the control that was suspended by calling 
            BeginUpdate.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.Clone">
      <summary>
            Creates a new object that is a copy of this instance.
            </summary>
      <returns>
            A new object that is a copy of this instance.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
            Raises the PropertyChanged event.
            </summary>
      <param name="e">
            A PropertyChangedEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.ThrowExceptionIfDisposed">
      <summary>
            Throws an ObjectDisposedException if the object has been disposed.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Sets the bounds of the control to the specified
            value.
            </summary>
      <param name="x">
            The new Left value of the control.
            </param>
      <param name="y">
            The new Right value of the control.
            </param>
      <param name="width">
            The new Width value of the control.
            </param>
      <param name="height">
            The new Height value of the control.
            </param>
      <param name="specified">
            A bitwise combination of the BoundsSpecified values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.OnHandleCreated(System.EventArgs)">
      <summary>
            Raises the HandleCreated event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.OnScroll(System.Windows.Forms.ScrollEventArgs)">
      <summary>
            Raises the Scroll event.
            </summary>
      <param name="se">
            A ScrollEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Raises the MouseWheel event.
            </summary>
      <param name="e">
            A MouseEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Raises the Layout event.
            </summary>
      <param name="levent">
            A LayoutEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Paints the background of the control.
            </summary>
      <param name="e">
            A PaintEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Raises the Paint event.
            </summary>
      <param name="e">
            A PaintEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.OnVisibleChanged(System.EventArgs)">
      <summary>
            Raises the VisibleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.EnsureItems(System.Int32)">
      <summary>
            Updates the control to ensure that there are the specified number of items in
            the array.
            </summary>
      <param name="count">
            The number of items.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">count (parameter) is less than zero.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
      <summary>
            Raises the ControlAdded event.
            </summary>
      <param name="e">
            A ControlEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
      <summary>
            Raises the ControlRemoved event.
            </summary>
      <param name="e">
            A ControlEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.OnItemPropertyChanged(NationalInstruments.UI.ControlArrayPropertyChangedEventArgs{`0})">
      <summary>
            Raises the ItemPropertyChanged
            event.
            </summary>
      <param name="e">
            A ControlArrayPropertyChangedEventArgs&lt;T&gt; that
            contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.OnGotFocus(System.EventArgs)">
      <summary>
            Raises the GotFocus event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.OnLostFocus(System.EventArgs)">
      <summary>
            Raises the LostFocus event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ControlArray`1.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlArray`1.AutoScroll">
      <summary>
            Gets or sets a value indicating whether the container enables the user to scroll 
            to any controls placed outside of its visible boundaries.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlArray`1.AutoSize">
      <summary>
            Gets or sets a value indicating whether the control is automatically resized to
            display its entire contents.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlArray`1.Text">
      <summary>
            Gets or sets the text associated with the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlArray`1.ItemTemplate">
      <summary>
            Gets the template control used to create items in the array.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlArray`1.Item(System.Int32)">
      <summary>
            Gets the control at the specified index in the array.
            </summary>
      <param name="index">
            The index of the control to retrieve from the array.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The index (parameter) value is less than zero or is greater than or equal to
            the number of control in the array.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlArray`1.Border">
      <summary>
            Gets or sets the border style of the control.
            </summary>
      <exception cref="T:System.ArgumentNullException">
            The specified Border is null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlArray`1.CanShowFocus">
      <summary>
            Gets or sets value indicating if the control draws a focus rectangle when the control
            has focus.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlArray`1.LayoutMode">
      <summary>
            Gets or sets the mode used to lay out the items of the control.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a ControlArrayLayoutMode value.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlArray`1.ItemDistance">
      <summary>
            Gets or sets the distance between items of the control.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is less than 0.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlArray`1.ScaleMode">
      <summary>
            Gets or sets the mode used to modify the number of items in the control.
            </summary>
      <exception cref="T:System.ArgumentNullException">
            The specified value is null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlArray`1.Count">
      <summary>
            Gets the number of controls in the array.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlArray`1.System#Collections#Generic#ICollection{TControl}#IsReadOnly">
      <summary>
            Gets a value indicating whether the ICollection&lt;T&gt;  is read-only.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlArray`1.PropertyChanged">
      <summary>
            Occurs when a property on the control changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ControlArray`1.ItemPropertyChanged">
      <summary>
            Occurs when a property of an item in the array changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ControlArray`1.DefaultSize">
      <summary>
            Gets the default size of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.Slide">
      <summary>
            Represents a Measurement Studio Windows Forms slide control to display numeric
            values.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.LinearNumericPointer">
      <summary>
            Provides an abstract base class for Measurement Studio Windows Forms
            numeric controls that display a numeric value in a linear scale.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.NumericPointer">
      <summary>
            Provides an abstract base class for all Measurement Studio Windows Forms controls 
            that display a numeric value with a pointer and a scale.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.#ctor">
      <summary>
            Initializes a new instance of the NumericPointer class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the NumericPointer 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.GetValue">
      <summary>
            Gets the value of the control.
            </summary>
      <returns>
            The value of the control.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.SetValue(System.Double,NationalInstruments.UI.Action)">
      <summary>
            Sets the value of the control.
            </summary>
      <param name="value">
            The value of the control.
            </param>
      <param name="action">
            The source of the Action that caused the event.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnBeforeChangeValue(NationalInstruments.UI.BeforeChangeNumericValueEventArgs)">
      <summary>
            Raises the BeforeChangeValue
            event.
            </summary>
      <param name="e">
            A BeforeChangeNumericValueEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnAfterChangeValue(NationalInstruments.UI.AfterChangeNumericValueEventArgs)">
      <summary>
            Raises the AfterChangeValue event.
            </summary>
      <param name="e">
            An AfterChangeNumericValueEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnRangeFillsChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the RangeFillsChanged
            event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnCustomDivisionsChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the CustomDivisionsChanged
            event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnValueEnterRange(NationalInstruments.UI.ScaleRangeFillEventArgs)">
      <summary>
            Raises the ValueEnterRange
            event.
            </summary>
      <param name="e">
            A ScaleRangeFillEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnValueLeaveRange(NationalInstruments.UI.ScaleRangeFillEventArgs)">
      <summary>
            Raises the ValueLeaveRange
            event.
            </summary>
      <param name="e">
            A ScaleRangeFillEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnAutoDivisionSpacingChanged(System.EventArgs)">
      <summary>
            Raises the AutoDivisionSpacingChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnRangeChanged(System.EventArgs)">
      <summary>
            Raises the RangeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnScaleTypeChanged(System.EventArgs)">
      <summary>
            Raises the ScaleTypeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnScaleLogBaseChanged(System.EventArgs)">
      <summary>
            Raises the ScaleLogBaseChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnScaleBaseLineColorChanged(System.EventArgs)">
      <summary>
            Raises the ScaleBaseLineColorChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnScaleBaseLineVisibleChanged(System.EventArgs)">
      <summary>
            Raises the ScaleBaseLineVisibleChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnScaleVisibleChanged(System.EventArgs)">
      <summary>
            Raises the ScaleVisibleChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnValueChanged(System.EventArgs)">
      <summary>
            Raises the ValueChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnOutOfRangeModeChanged(System.EventArgs)">
      <summary>
            Raises the OutOfRangeModeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnAntiAliasedChanged(System.EventArgs)">
      <summary>
            Raises the AntiAliasedChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnPointerColorChanged(System.EventArgs)">
      <summary>
            Raises the PointerColorChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnCoercionModeChanged(System.EventArgs)">
      <summary>
            Raises the CoercionModeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnCoercionIntervalBaseChanged(System.EventArgs)">
      <summary>
            Raises the CoercionIntervalBaseChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnCoercionIntervalChanged(System.EventArgs)">
      <summary>
            Raises the CoercionIntervalChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnToolTipsEnabledChanged(System.EventArgs)">
      <summary>
            Raises the ToolTipsEnabledChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnToolTipFormatChanged(System.EventArgs)">
      <summary>
            Raises the ToolTipFormatChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnEditRangeNumericFormatModeChanged(System.EventArgs)">
      <summary>
            Raises the EditRangeNumericFormatModeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.OnEditRangeDateTimeFormatModeChanged(System.EventArgs)">
      <summary>
            Raises the EditRangeDateTimeFormatModeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.MovePrevious">
      <summary>
            Moves the pointer to the previous value as specified by the 
            CoercionMode.
            </summary>
      <returns>true if the pointer moved to the previous value.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.MoveNext">
      <summary>
            Moves the pointer to the next value as specified by the 
            CoercionMode.
            </summary>
      <returns>true if the pointer moved to the next value.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.GetStyle">
      <summary>
            Gets the style that determines the appearance of the control.
            </summary>
      <returns>
            A NumericPointerStyle that determines
            the appearance of the control.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.GetService(System.Type)">
      <summary>
            Returns an object that represents a service provided by the control or by its container.
            </summary>
      <param name="service">
            A service provided by the control.
            </param>
      <returns>
            An Object that represents a service provided by the control.  This value is
            null if the control does not provide the specified service.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericPointer.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            Determines whether the specified key is a regular input key or a special key that requires
            preprocessing.
            </summary>
      <param name="keyData">
            The Keys value to check.
            </param>
      <returns>true if the specified key is a regular input key.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.AutoDivisionSpacing">
      <summary>
            Gets or sets a value indicating if the scale automatically calculates the location of tick marks.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.CustomDivisions">
      <summary>
            Gets the collection of custom divisions on the scale.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.MajorDivisions">
      <summary>
            Gets the major divisions on the scale.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.MinorDivisions">
      <summary>
            Gets the minor divisions on the scale.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.RangeFills">
      <summary>
            Gets the collection of fills drawn on the scale.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.Range">
      <summary>
            Gets or sets the minimum and maximum value of the scale.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            The value is Empty.
            
            -or-
            


            The Minimum of the specified
            value is NegativeInfinity.
            
            -or-
            


            The Maximum of the specified
            value is PositiveInfinity.
            
            -or-
            
            -or-
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.ScaleType">
      <summary>
            Gets or sets the type of the scale.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a ScaleType value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.ScaleLogBase">
      <summary>
            Gets or sets the base of the logarithm to use for a logarithmic scale.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is less than or equal to 1.
            
            -or-
            


            The value is NaN, NegativeInfinity, or
            PositiveInfinity.
            


            -or-
            
            The value is NaN, NegativeInfinity, or
            PositiveInfinity.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.ScaleBaseLineColor">
      <summary>
            Gets or sets the color of the base line connecting the tick marks.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.ScaleBaseLineVisible">
      <summary>
            Gets or sets a value indicating if the base line connecting the tick marks is displayed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.ScaleVisible">
      <summary>
            Gets or sets a value indicating if the scale is displayed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.Value">
      <summary>
            Gets or sets the value of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is NaN, NegativeInfinity,
            or PositiveInfinity.
            
            -or-
            

OutOfRangeMode is 
            ThrowException and the value is less 
            than Minimum,
            or value is greater than Maximum.
            


            -or-
            OutOfRangeMode is 
            ThrowException and the value is less 
            than Minimum,
            or value is greater than Maximum.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.OutOfRangeMode">
      <summary>
            Gets or sets a value that specifies the behavior of the control when Value
            is set outside the limits of the range.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a NumericOutOfRangeMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.AntiAliased">
      <summary>
            Gets or sets a value indicating if the control draws anti-aliased.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.PointerColor">
      <summary>
            Gets or sets the color of the pointer on the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.CoercionMode">
      <summary>
            Gets or sets the mode used to coerce the value of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.CoercionIntervalBase">
      <summary>
            Gets or sets the base of the interval used for coercing the value. CoercionIntervalBase is used only when
            CoercionMode is set to
            ToInterval. 
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is NegativeInfinity or
            PositiveInfinity.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.CoercionInterval">
      <summary>
            Gets or sets the interval used for coercing the value. CoercionInterval is used when
            CoercionMode is set to
            ToInterval. 
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is NaN, NegativeInfinity, 
            or PositiveInfinity.
            
            -or-
            


            The value is 0.
            


            -or-
            
            The value is 0.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.EditRangeNumericFormatMode">
      <summary>
            Gets or sets the mode used to format the value that is displayed when you click on an
            editable minimum or maximum value label on the scale.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.EditRangeDateTimeFormatMode">
      <summary>
            Gets or sets the mode used to format the value displayed when you click on an
            editable minimum or maximum value label on the scale.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.ToolTipsEnabled">
      <summary>
            Gets or sets a value indicating if the value of the control is shown in a tooltip 
            when the mouse hovers over the pointer.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.ToolTipFormat">
      <summary>
            Gets or sets the format string used to format the value displayed in the tooltip.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericPointer.InteractionMouseCursors">
      <summary>
            Gets the collection of properties that you can use to customize mouse cursors for different interactions with the numeric pointer controls.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.BeforeChangeValue">
      <summary>
            Occurs before the value of Value 
            changes, allowing for the change event to be cancelled.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.AfterChangeValue">
      <summary>
            Occurs after the value of Value 
            has changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.RangeFillsChanged">
      <summary>
            Occurs when the content of the RangeFills 
            collection changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.CustomDivisionsChanged">
      <summary>
            Occurs when the content of the CustomDivisions 
            collection changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.ValueEnterRange">
      <summary>
            Occurs when the value of Value 
            changes such that the value enters the range of a ScaleRangeFill
            in RangeFills.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.ValueLeaveRange">
      <summary>
            Occurs when the value of Value 
            changes such that the value leaves the range of a ScaleRangeFill
            in RangeFills.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.AutoDivisionSpacingChanged">
      <summary>
            Occurs when the value of AutoDivisionSpacing 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.RangeChanged">
      <summary>
            Occurs when the value of Range 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.ScaleTypeChanged">
      <summary>
            Occurs when the value of ScaleType 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.ScaleLogBaseChanged">
      <summary>
            Occurs when the value of ScaleLogBase 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.ScaleBaseLineColorChanged">
      <summary>
            Occurs when the value of ScaleBaseLineColor 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.ScaleBaseLineVisibleChanged">
      <summary>
            Occurs when the value of ScaleBaseLineVisible 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.ScaleVisibleChanged">
      <summary>
            Occurs when the value of ScaleVisible 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.ValueChanged">
      <summary>
            Occurs when the value of Value 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.OutOfRangeModeChanged">
      <summary>
            Occurs when the value of OutOfRangeMode 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.AntiAliasedChanged">
      <summary>
            Occurs when the value of AntiAliased 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.PointerColorChanged">
      <summary>
            Occurs when the value of PointerColor 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.CoercionModeChanged">
      <summary>
            Occurs when the value of CoercionMode 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.CoercionIntervalBaseChanged">
      <summary>
            Occurs when the value of CoercionIntervalBase 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.CoercionIntervalChanged">
      <summary>
            Occurs when the value of CoercionInterval 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.ToolTipsEnabledChanged">
      <summary>
            Occurs when the value of ToolTipsEnabled 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.ToolTipFormatChanged">
      <summary>
            Occurs when the value of ToolTipFormat 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.EditRangeNumericFormatModeChanged">
      <summary>
            Occurs when the value of EditRangeNumericFormatMode 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericPointer.EditRangeDateTimeFormatModeChanged">
      <summary>
            Occurs when the value of EditRangeDateTimeFormatMode 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.LinearNumericPointer.#ctor">
      <summary>
            Initializes a new instance of the LinearNumericPointer class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.LinearNumericPointer.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the LinearNumericPointer 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.LinearNumericPointer.OnFillModeChanged(System.EventArgs)">
      <summary>
            Raises the FillModeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.LinearNumericPointer.OnFillBaseValueChanged(System.EventArgs)">
      <summary>
            Raises the FillBaseValueChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.LinearNumericPointer.OnFillColorChanged(System.EventArgs)">
      <summary>
            Raises the FillColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.LinearNumericPointer.OnFillStyleChanged(System.EventArgs)">
      <summary>
            Raises the FillStyleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.LinearNumericPointer.OnFillBackColorChanged(System.EventArgs)">
      <summary>
            Raises the FillBackColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.LinearNumericPointer.OnInteractionModeChanged(System.EventArgs)">
      <summary>
            Raises the InteractionModeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.LinearNumericPointer.OnScalePositionChanged(System.EventArgs)">
      <summary>
            Raises the ScalePositionChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.LinearNumericPointer.OnInvertedScaleChanged(System.EventArgs)">
      <summary>
            Raises the InvertedScaleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.LinearNumericPointer.GetService(System.Type)">
      <summary>
            Returns an object that represents a service provided by the control or by its container.
            </summary>
      <param name="service">
            A service provided by the control.
            </param>
      <returns>
            An Object that represents a service provided by the control.  This value is
            null if the control does not provide the specified service.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.LinearNumericPointer.HitTest(System.Int32,System.Int32)">
      <summary>
            Returns a LinearNumericPointerHitTestInfo that specifies
            where on the control the specified point is located.
            </summary>
      <param name="x">
            The horizontal location of the point to be hit-tested, in client coordinates.
            </param>
      <param name="y">
            The vertical location of the point to be hit-tested, in client coordinates.
            </param>
      <returns>
            A LinearNumericPointerHitTestInfo that specifies where on
            control the specified x (parameter) and y (parameter) coordinate is located.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.LinearNumericPointer.FillMode">
      <summary>
            Gets or sets the direction for filling the fill area of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a NumericFillMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.LinearNumericPointer.FillBaseValue">
      <summary>
            Gets or sets the value at which the fill begins.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is NaN.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.LinearNumericPointer.FillColor">
      <summary>
            Gets or sets the color of the fill area of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.LinearNumericPointer.FillStyle">
      <summary>
            Gets or sets the style used to draw the fill color.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.LinearNumericPointer.FillBackColor">
      <summary>
            Gets or sets the color of the background of the fill area.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.LinearNumericPointer.InteractionMode">
      <summary>
            Gets or sets the user interactions that are supported by the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.LinearNumericPointer.ScalePosition">
      <summary>
            Gets or sets the horizontal or vertical orientation of the scale.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a NumericScalePosition value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.LinearNumericPointer.InvertedScale">
      <summary>
            Gets or sets a value indicating if the scale is inverted.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.LinearNumericPointer.FillModeChanged">
      <summary>
            Occurs when the value of FillMode 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.LinearNumericPointer.FillBaseValueChanged">
      <summary>
            Occurs when the value of FillBaseValue 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.LinearNumericPointer.FillColorChanged">
      <summary>
            Occurs when the value of FillColor 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.LinearNumericPointer.FillStyleChanged">
      <summary>
            Occurs when the value of FillStyle 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.LinearNumericPointer.FillBackColorChanged">
      <summary>
            Occurs when the value of FillBackColor 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.LinearNumericPointer.InteractionModeChanged">
      <summary>
            Occurs when the value of InteractionMode 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.LinearNumericPointer.ScalePositionChanged">
      <summary>
            Occurs when the value of ScalePosition 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.LinearNumericPointer.InvertedScaleChanged">
      <summary>
            Occurs when the value of InvertedScale 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Slide.#ctor">
      <summary>
            Initializes a new instance of the Slide class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Slide.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the Slide 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Slide.OnSlideStyleChanged(System.EventArgs)">
      <summary>
            Raises the SlideStyleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Slide.DefaultSize">
      <summary>
            Gets the default size of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Slide.SlideStyle">
      <summary>
            Gets or sets the style that determines the appearance of the slide.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Slide.SlideStyleChanged">
      <summary>
            Occurs when the value of SlideStyle 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.RadialNumericPointer">
      <summary>
            Provides an abstract base class for Measurement Studio Windows 
            Forms numeric pointers that display a numeric value in a radial scale.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.RadialNumericPointer.#ctor">
      <summary>
            Initializes a new instance of the RadialNumericPointer class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.RadialNumericPointer.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the RadialNumericPointer 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.RadialNumericPointer.OnDialColorChanged(System.EventArgs)">
      <summary>
            Raises the DialColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.RadialNumericPointer.OnInteractionModeChanged(System.EventArgs)">
      <summary>
            Raises the InteractionModeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.RadialNumericPointer.OnScaleArcChanged(System.EventArgs)">
      <summary>
            Raises the ScaleArcChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.RadialNumericPointer.GetService(System.Type)">
      <summary>
            Returns an object that represents a service provided by the control or by its container.
            </summary>
      <param name="service">
            A service provided by the control.
            </param>
      <returns>
            An Object that represents a service provided by the control.  This value is
            null if the control does not provide the specified service.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.RadialNumericPointer.HitTest(System.Int32,System.Int32)">
      <summary>
            Returns a RadialNumericPointerHitTestInfo that specifies
            where on the control the specified point is located.
            </summary>
      <param name="x">
            The horizontal location of the point to be hit-tested, in client coordinates.
            </param>
      <param name="y">
            The vertical location of the point to be hit-tested, in client coordinates.
            </param>
      <returns>
            A RadialNumericPointerHitTestInfo that specifies where on
            the control the x (parameter) and y (parameter) coordinate is located.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.RadialNumericPointer.DialColor">
      <summary>
            Gets or sets the color of the radial area containing the pointer.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.RadialNumericPointer.InteractionMode">
      <summary>
            Gets or sets the user interactions that are supported by the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.RadialNumericPointer.ScaleArc">
      <summary>
            Gets or sets the arc on which the scale is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.RadialNumericPointer.DialColorChanged">
      <summary>
            Occurs when the value of DialColor 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.RadialNumericPointer.InteractionModeChanged">
      <summary>
            Occurs when the value of InteractionMode 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.RadialNumericPointer.ScaleArcChanged">
      <summary>
            Occurs when the value of ScaleArc 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.Graph">
      <summary>
            Provides an abstract base class for all Measurement Studio Windows Forms graph controls.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.GetPlotCollection">
      <summary>
            Returns the collection of plots on the graph.
            </summary>
      <returns>
            An IList that contains the plot objects on the graph.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.#ctor">
      <summary>
            Initializes a new instance of the Graph class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the Graph 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.ClearData">
      <summary>
            Removes all data from the history of all plots on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.PointToVirtual(System.Drawing.Point)">
      <summary>
            Converts the location of the specified client coordinate to a virtual coordinate with respect to the plot area bounds.
            </summary>
      <param name="point">
            The Point in client coordinates to convert.
            </param>
      <returns>
            A PointF that represents the converted Point, point (parameter),
            in virtual coordinates.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.VirtualToPoint(System.Drawing.PointF)">
      <summary>
            Converts the location of the specified virtual point to a client coordinate with respect to the plot area bounds.
            </summary>
      <param name="virtualPoint">
            The PointF in virtual coordinates to convert.
            </param>
      <returns>
            A Point that represents the converted PointF, virtualPoint (parameter),
            in client coordinates.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.RectangleToVirtual(System.Drawing.Rectangle)">
      <summary>
            Converts the size and location of the specified client rectangle to virtual coordinates with respect to the plot area bounds.
            </summary>
      <param name="rectangle">
            The Rectangle in client coordinates to convert.
            </param>
      <returns>
            A RectangleF that represent the converted Rectangle, rectangle (parameter),
            in virtual coordinates.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.RectangleToVirtual(System.Drawing.RectangleF)">
      <summary>
            Converts the size and location of the specified client rectangle to virtual coordinates with respect to the plot area bounds.
            </summary>
      <param name="rectangle">
            The RectangleF in client coordinates to convert.
            </param>
      <returns>
            A RectangleF that represents the converted RectangleF, rectangle (parameter),
            in virtual coordinates.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.VirtualToRectangle(System.Drawing.RectangleF)">
      <summary>
            Converts the size and location of the specified virtual rectangle to client coordinates with respect to the plot area bounds.
            </summary>
      <param name="virtualRectangle">
            The RectangleF in virtual coordinates to convert.
            </param>
      <returns>
            A Rectangle that represents the converted RectangleF, virtualRectangle (parameter),
            in client coordinates.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.ZoomAroundPoint(System.Single)">
      <summary>
            Zooms around the center of the plot area using the specified zoom factor.
            </summary>
      <param name="zoomFactor">
            The factor used to perform the zoom.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The zoomFactor (parameter) is less than or equal to 0.0.
            
            -or-
            zoomFactor (parameter) is NaN,
            NegativeInfinity, or
            PositiveInfinity.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.ZoomAroundPoint(System.Single,System.Single,System.Single)">
      <summary>
            Zooms around the specified x and y coordinates with the specified zoom factor.
            </summary>
      <param name="zoomFactor">
            The percentage to zoom by.
            </param>
      <param name="virtualX">
            The horizontal position of the point to zoom around in virtual coordinates.
            </param>
      <param name="virtualY">
            The vertical position of the point to zoom around in virtual coordinates.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The zoomFactor (parameter) is less than or equal to 0.0.
            
            -or-
            zoomFactor (parameter) is NaN,
            NegativeInfinity, or
            PositiveInfinity.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.ZoomAroundPoint(System.Single,System.Drawing.PointF)">
      <summary>
            Zooms around the specified point with the specified zoom factor.
            </summary>
      <param name="zoomFactor">
            The percentage to zoom by.
            </param>
      <param name="virtualPoint">
            The PointF in virtual coordinates to zoom around.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The zoomFactor (parameter) is less than or equal to 0.0.
            
            -or-
            zoomFactor (parameter) is NaN,
            NegativeInfinity, or
            PositiveInfinity.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.ZoomXY(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Zooms to the region of the plot area specified by the x location, y location, width, and height. 
            </summary>
      <param name="virtualX">The horizontal position in virtual coordinates of the bottom-left corner of the region of the plot area to zoom.
            </param>
      <param name="virtualY">
            The vertical position in virtual coordinates of the bottom-left corner of the region of the plot area to zoom.
            </param>
      <param name="virtualWidth">
            The width of the region of the plot area to zoom, in virtual coordinates.
            </param>
      <param name="virtualHeight">
            The height of the region of the plot area to zoom, in virtual coordinates.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">virtualX (parameter), virtualY (parameter), virtualWidth (parameter), or
            virtualHeight (parameter) is NaN,
            NegativeInfinity, or
            PositiveInfinity.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.ZoomXY(System.Drawing.RectangleF)">
      <summary>
            Zooms to the region of the plot area specified by the rectangle.
            </summary>
      <param name="virtualRectangle">
            The RectangleF that specifies the region of the plot area to zoom, in virtual coordinates.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.PanXY(System.Single,System.Single)">
      <summary>
            Pans the plot area according to the specified horizontal and vertical factors.
            </summary>
      <param name="xFactor">
            The horizontal factor.
            </param>
      <param name="yFactor">
            The vertical factor.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">xFactor (parameter) or yFactor (parameter) is
            NaN, NegativeInfinity,
            or PositiveInfinity.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.UndoZoomPan">
      <summary>
            Reverts the last zoom or pan operation.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.ResetZoomPan">
      <summary>
            Reverts all zoom and pan operations to restore the plot area to its initial state.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.DrawPlotAreaImage(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the background image of the plot area.
            </summary>
      <param name="args">
            A ComponentDrawArgs that contains the drawing data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">args (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.DrawGridLines(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the grid lines in the plot area of the graph.
            </summary>
      <param name="args">
            A ComponentDrawArgs that contains the drawing data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">args (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.DrawPlotAreaComponents(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the components contained in the plot area of the graph, such as plots and cursors.
            </summary>
      <param name="args">
            A ComponentDrawArgs that contains the drawing data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">args (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnInteractionModeChanged(System.EventArgs)">
      <summary>
            Raises the InteractionModeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnInteractionModeDefaultChanged(System.EventArgs)">
      <summary>
            Raises the InteractionModeDefaultChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnSelectionStyleChanged(System.EventArgs)">
      <summary>
            Raises the SelectionStyleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnSelectionColorChanged(System.EventArgs)">
      <summary>
            Raises the SelectionColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnZoomFactorChanged(System.EventArgs)">
      <summary>
            Raises the ZoomFactorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnZoomAnimationChanged(System.EventArgs)">
      <summary>
            Raises the ZoomAnimationChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnPlotAreaBorderChanged(System.EventArgs)">
      <summary>
            Raises the PlotAreaBorderChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnPlotAreaColorChanged(System.EventArgs)">
      <summary>
            Raises the PlotAreaColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnPlotAreaImageChanged(System.EventArgs)">
      <summary>
            Raises the PlotAreaImageChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnPlotAreaImageAlignmentChanged(System.EventArgs)">
      <summary>
            Raises the PlotAreaImageAlignmentChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnPlotAreaBoundsChanged(System.EventArgs)">
      <summary>
            Raises the PlotAreaBoundsChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnPlotsChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the PlotsChanged event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnPlotAreaMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Raises the PlotAreaMouseDown event.
            </summary>
      <param name="e">
            A MouseEventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnPlotAreaMouseHover(System.EventArgs)">
      <summary>
            Raises the PlotAreaMouseHover event.
            </summary>
      <param name="e">
            A EventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnPlotAreaMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Raises the PlotAreaMouseMove event.
            </summary>
      <param name="e">
            A MouseEventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnPlotAreaMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Raises the PlotAreaMouseUp event.
            </summary>
      <param name="e">
            A MouseEventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnPlotAreaMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Raises the PlotAreaMouseWheel event.
            </summary>
      <param name="e">
            An MouseEventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnBeforeDrawPlotArea(NationalInstruments.UI.BeforeDrawEventArgs)">
      <summary>
            Raises the BeforeDrawPlotArea event.
            </summary>
      <param name="e">
            A BeforeDrawEventArgs that contains the drawing data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnAfterDrawPlotArea(NationalInstruments.UI.AfterDrawEventArgs)">
      <summary>
            Raises the AfterDrawPlotArea event.
            </summary>
      <param name="e">
            An AfterDrawEventArgs that contains the drawing data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnPan(NationalInstruments.UI.ActionEventArgs)">
      <summary>
            Raises the Pan event.
            </summary>
      <param name="e">
            An ActionEventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnZoomPanUndone(NationalInstruments.UI.ActionEventArgs)">
      <summary>
            Raises the ZoomPanUndone event.
            </summary>
      <param name="e">
            An ActionEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnZoomPanReset(NationalInstruments.UI.ActionEventArgs)">
      <summary>
            Raises the ZoomPanReset event.
            </summary>
      <param name="e">
            An ActionEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnInteractionHistoryCountChanged(System.EventArgs)">
      <summary>
            Raises the InteractionHistoryCountChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.OnZoom(NationalInstruments.UI.ActionEventArgs)">
      <summary>
            Raises the Zoom event.
            </summary>
      <param name="e">
            An ActionEventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Graph.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            Determines whether the specified key is a regular input key or a special key that requires
            preprocessing.
            </summary>
      <param name="keyData">
            The Keys value to check.
            </param>
      <returns>true if the specified key is a regular input key.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Graph.DefaultSize">
      <summary>
            Gets the default size of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Graph.PlotAreaBounds">
      <summary>
            Gets the rectangle that represents the plot area of the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Graph.PlotAreaBorder">
      <summary>
            Gets or sets the border style of the plot area.
            </summary>
      <exception cref="T:System.ArgumentNullException">
            The specified Border is null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Graph.PlotAreaColor">
      <summary>
            Gets or sets the color of the plot area of the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Graph.PlotAreaImage">
      <summary>
            Gets or sets the image that is displayed in the plot area of the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Graph.PlotAreaImageAlignment">
      <summary>
            Gets or sets the alignment of the image that is displayed in the plot area of the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not an ImageAlignment value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Graph.InteractionMode">
      <summary>
            Gets or sets the user interactions that are supported by the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Graph.InteractionModeDefault">
      <summary>
            Gets or sets the user interaction that is enabled on the graph without the use of a modifier key.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not an GraphDefaultInteractionMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Graph.SelectionStyle">
      <summary>
            Gets or sets the style with which a selection is drawn in the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Graph.SelectionColor">
      <summary>
            Gets or sets the color of a selection in the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Graph.ZoomFactor">
      <summary>
            Gets or sets the factor to use to zoom around a point when zooming interactively.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is less than or equal to 0.0.
            
            -or-
            
            The specified value is NaN,
            NegativeInfinity, or
            PositiveInfinity.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Graph.InteractionHistoryCount">
      <summary>
            Gets the number of times the zoom or pan options have been performed on the graph. </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Graph.ZoomAnimation">
      <summary>
            Gets or sets a value indicating if an animation is drawn when zooming interactively.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Graph.InteractionMouseCursors">
      <summary>
            Gets the collection of properties that you can use to customize mouse cursors for different interactions with the graph controls.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.InteractionModeChanged">
      <summary>
            Occurs when the value of InteractionMode 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.InteractionModeDefaultChanged">
      <summary>
            Occurs when the value of InteractionModeDefault 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.SelectionStyleChanged">
      <summary>
            Occurs when the value of SelectionStyle changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.SelectionColorChanged">
      <summary>
            Occurs when the value of SelectionColor changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.ZoomFactorChanged">
      <summary>
            Occurs when the value of ZoomFactor changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.ZoomAnimationChanged">
      <summary>
            Occurs when the value of ZoomAnimation
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.PlotAreaColorChanged">
      <summary>
            Occurs when the value of PlotAreaColor 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.PlotAreaBorderChanged">
      <summary>
            Occurs when the value of PlotAreaBorder 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.PlotAreaImageChanged">
      <summary>
            Occurs when the value of PlotAreaImage 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.PlotAreaImageAlignmentChanged">
      <summary>
            Occurs when the value of PlotAreaImageAlignment
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.PlotAreaBoundsChanged">
      <summary>
            Occurs when the value of PlotAreaBounds 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.PlotsChanged">
      <summary>
            Occurs when the content of the graph's plot collection changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.PlotAreaMouseDown">
      <summary>
            Occurs when the mouse pointer is over the plot area and a mouse button is
            pressed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.PlotAreaMouseMove">
      <summary>
            Occurs when the mouse pointer is moved over the plot area.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.PlotAreaMouseHover">
      <summary>
            Occurs when the mouse hovers over the plot area.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.PlotAreaMouseUp">
      <summary>
            Occurs when the mouse pointer is over the plot area and a mouse button is
            released.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.PlotAreaMouseWheel">
      <summary>
            Occurs when the mouse wheel moves while the mouse pointer is on the plot area.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.BeforeDrawPlotArea">
      <summary>
            Occurs before the plot area is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.AfterDrawPlotArea">
      <summary>
            Occurs after the plot area is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.Zoom">
      <summary>
            Occurs when the plot area is zoomed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.Pan">
      <summary>
            Occurs when the plot area is panned.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.ZoomPanUndone">
      <summary>
            Occurs when the last zoom or pan operation is reverted.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.ZoomPanReset">
      <summary>
            Occurs when all zoom and pan operations are reset.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Graph.InteractionHistoryCountChanged">
      <summary>
            Occurs when the interaction history count changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.LedArray">
      <summary>
            Represents the array of Measurement Studio Windows Forms Led
            controls.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.BooleanArray`1">
      <summary>
            Represents the array of Measurement Studio Windows Forms Boolean
            controls for displaying and editing Boolean values.
            </summary>
      <typeparam name="TControl">
            The type of the control for which an array is created. The type must derive from
            Boolean, implement ICloneable and
            INotifyPropertyChanged, and specify a default constructor.
            </typeparam>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.BooleanArray`1.#ctor">
      <summary>
            Initializes a new instance of the BooleanArray&lt;T&gt; class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.BooleanArray`1.Clone">
      <summary>
            Creates a new object that is a copy of this instance.
            </summary>
      <returns>
            A new object that is a copy of this instance.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.BooleanArray`1.GetValues">
      <summary>
            Gets the data values of the control.
            </summary>
      <returns>
            A Boolean array that represents the data values of the control.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.BooleanArray`1.SetValues(System.Boolean[])">
      <summary>
            Sets the values of the items in the control to the array of specified values.
            </summary>
      <param name="data">
            The array of values.
            </param>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            The supplied data is not mutually exclusive and MutuallyExclusive is set to true.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.BooleanArray`1.SetValues(System.Boolean[],System.Int32,System.Int32)">
      <summary>
            Sets the values of the items in the control to the array of specified values using the specified start 
            index and length.
            </summary>
      <param name="data">
            The array of values.
            </param>
      <param name="startIndex">
            The index in data (parameter) at which the data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter), in data (parameter).
            </param>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of data (parameter).
            </exception>
      <exception cref="T:System.ArgumentException">
            The supplied data is not mutually exclusive and MutuallyExclusive is set to true.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.BooleanArray`1.SetValuesFromSample(NationalInstruments.DigitalWaveform,System.Int32)">
      <summary>
            Sets the value of the items in the control to the specified sample in the waveform.
            </summary>
      <param name="data">
            The waveform containing samples to display on the control.
            </param>
      <param name="sampleIndex">
            The index of the sample in the waveform.
            </param>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">sampleIndex (parameter) is less than 0.
            
            -or-
            

sampleIndex (parameter) is greater than the number of samples in data (parameter).
            


            -or-
            sampleIndex (parameter) is greater than the number of samples in data (parameter).
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.BooleanArray`1.SetValuesFromSignal(NationalInstruments.DigitalWaveform,System.Int32)">
      <summary>
            Sets the value of the items in the control to the samples of the specified signal in the waveform.
            </summary>
      <param name="data">
            The waveform containing the samples of the signal to display on the control.
            </param>
      <param name="signalIndex">
            The index of the signal in the waveform.
            </param>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">signalIndex (parameter) is less than 0.
            
            -or-
            

signalIndex (parameter) is greater than the number of signals in data (parameter).
            


            -or-
            signalIndex (parameter) is greater than the number of signals in data (parameter).
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.BooleanArray`1.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
      <summary>
            Raises the ControlAdded event.
            </summary>
      <param name="e">
            A ControlEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.BooleanArray`1.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
      <summary>
            Raises the ControlRemoved event.
            </summary>
      <param name="e">
            A ControlEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.BooleanArray`1.OnValuesChanged(System.EventArgs)">
      <summary>
            Raises the ValuesChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.BooleanArray`1.BackColor">
      <summary>
            Gets or sets the background color of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.BooleanArray`1.BindingData">
      <summary>
            Gets or sets the data when binding to a data source.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.BooleanArray`1.MutuallyExclusive">
      <summary>
            Allows the controls in the array to be mutually exclusive. This ensures that only one of the elements is set to true at a time.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.BooleanArray`1.ValuesChanged">
      <summary>
            Occurs when a new set of data values is passed to the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.LedArray.#ctor">
      <summary>
            Initializes a new instance of the LedArray class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.LedArray.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the LedArray 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.LedArray.Clone">
      <summary>
            Creates a new object that is a copy of this instance.
            </summary>
      <returns>
            A new object that is a copy of this instance.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.XYGraph">
      <summary>
            Provides an abstract base class for Measurement Studio Windows Forms graphs that plot data on a set of x and y axes.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.#ctor">
      <summary>
            Initializes a new instance of the XYGraph class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the XYGraph 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.ZoomAroundPoint(System.Single,NationalInstruments.UI.XYPlot,System.Double,System.Double)">
      <summary>
            Zooms around the specified data point with the specified zoom factor and reference plot.
            </summary>
      <param name="zoomFactor">
            The percentage to zoom by.
            </param>
      <param name="referencePlot">
            An XYPlot to use as the context for xData (parameter)
            and yData (parameter).
            </param>
      <param name="xData">
            The x data value to zoom around.
            </param>
      <param name="yData">
            The y data value to zoom around.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The zoomFactor (parameter) is less than or equal to 0.0.
            
            -or-
            zoomFactor (parameter) is NaN,
            NegativeInfinity, or
            PositiveInfinity.
            </exception>
      <exception cref="T:System.ArgumentNullException">referencePlot (parameter) is null.
            </exception>
      <exception cref="T:System.NotSupportedException">XYGraph is not the
            Owner of referencePlot (parameter).
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.ZoomXY(NationalInstruments.UI.XYPlot,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Zooms to the region of the plot area specified by the x location, y location, region width, region height, and
            reference plot.
            </summary>
      <param name="referencePlot">
            An XYPlot to use as the context for xData (parameter),
            yData (parameter), width (parameter), and height (parameter).
            </param>
      <param name="xData">
            The x data value of the corner of the plot area region to zoom.
            </param>
      <param name="yData">
            The y data value of the corner of the plot area region to zoom.
            </param>
      <param name="width">
            The width in data units of the plot area region to zoom.
            </param>
      <param name="height">
            The height in data units of the plot area region to zoom.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">referencePlot (parameter) is null.
            </exception>
      <exception cref="T:System.NotSupportedException">XYGraph is not the
            Owner of referencePlot (parameter).
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">width (parameter) or height (parameter) is
            NaN,
            NegativeInfinity, or
            PositiveInfinity.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.HitTest(System.Int32,System.Int32)">
      <summary>
            Returns a XYGraphHitTestInfo that specifies
            where on the control the specified point is located.
            </summary>
      <param name="x">
            The horizontal location of the point to be hit-tested, in client coordinates.
            </param>
      <param name="y">
            The vertical location of the point to be hit-tested, in client coordinates.
            </param>
      <returns>
            A XYGraphHitTestInfo that specifies where on
            the control the x (parameter) and y (parameter) coordinate is located.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.GetCursorAt(System.Int32,System.Int32)">
      <summary>
            Gets the cursor at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a cursor.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a cursor.
            </param>
      <returns>
            The XYCursor at the specified location. If 
            there is no cursor at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.GetAnnotationAt(System.Int32,System.Int32)">
      <summary>
            Gets the annotation at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for an annotation.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for an annotation.
            </param>
      <returns>
            The XYAnnotation at the specified location. If 
            there is no annotation at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.GetPlotAt(System.Int32,System.Int32)">
      <summary>
            Gets the plot at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <returns>
            The XYPlot at the specified location. If 
            there is no plot at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.GetPlotAt(System.Int32,System.Int32,System.Int32@)">
      <summary>
            Gets the plot at the specified location along with the index to the corresponding 
            x and y data value.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="index">
            Upon return, contains the index to the data value at the specified location.
            </param>
      <returns>
            The XYPlot at the specified location. If 
            there is no plot at the specified location, index (parameter) is set to 
            -1, and the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.GetPlotAt(System.Int32,System.Int32,System.Double@,System.Double@)">
      <summary>
            Gets the plot at the specified location along with the corresponding x and y 
            data value.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="xData">
            Upon return, contains the x data value at the specified location.
            </param>
      <param name="yData">
            Upon return, contains the y data value at the specified location.
            </param>
      <returns>
            The XYPlot at the specified location. If 
            there is no plot at the specified location, xData (parameter) and
            yData (parameter) are set to NaN, and the method 
            returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.GetPlotAt(System.Int32,System.Int32,System.Double@,System.Double@,System.Int32@)">
      <summary>
            Gets the plot at the specified location along with the corresponding x and y 
            data value and the index to the x and y data value.
            </summary>
      <param name="x">
            The x-coordinate of the location in client coordinates to search for a plot.
            </param>
      <param name="y">
            The y-coordinate of the location in client coordinates to search for a plot.
            </param>
      <param name="xData">
            Upon return, contains the x data value at the specified location.
            </param>
      <param name="yData">
            Upon return, contains the y data value at the specified location.
            </param>
      <param name="index">
            Upon return, contains the index to the data value at the specified location.
            </param>
      <returns>
            The XYPlot at the specified location. If 
            there is no plot at the specified location, xData (parameter) and
            yData (parameter) are set to NaN, 
            index (parameter) is set to -1, and the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.GetErrorBandAt(System.Int32,System.Int32)">
      <summary>
            Gets the plot associated with the error point at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location in client coordinates to search for an error point.
            </param>
      <param name="y">
            The y-coordinate of the location in client coordinates to search for an error point.
            </param>
      <returns>
            The XYPlot of the error point at the specified location. 
            If there is no error point at the specified location, 
            the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.GetErrorBandAt(System.Int32,System.Int32,System.Int32@)">
      <summary>
            Gets the plot associated with the error point at the specified location along with 
            the index of the error value.
            </summary>
      <param name="x">
            The x-coordinate of the location in client coordinates to search for an error point.
            </param>
      <param name="y">
            The y-coordinate of the location in client coordinates to search for an error point.
            </param>
      <param name="index">
            Upon return, contains the index to the error data value at the specified location.
            </param>
      <returns>
            The XYPlot of the error point at the specified location. 
            If there is no error point at the specified location, 
            index (parameter) is set to -1, 
            and the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.GetErrorBandAt(System.Int32,System.Int32,System.Double@,System.Double@)">
      <summary>
            Gets the plot associated with the error point at the specified location along with 
            the corresponding x and y coordinates of the error value.
            </summary>
      <param name="x">
            The x-coordinate of the location in client coordinates to search for an error point.
            </param>
      <param name="y">
            The y-coordinate of the location in client coordinates to search for an error point.
            </param>
      <param name="xErrorData">
            Upon return, contains the x-coordinate for the error point at the specified location.
            </param>
      <param name="yErrorData">
            Upon return, contains the y-coordinate for the error point at the specified location.
            </param>
      <returns>
            The XYPlot of the error point at the specified location. 
            If there is no error point at the specified location, 
            xErrorData (parameter) and yErrorData (parameter) are set to NaN, 
            and the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.GetErrorBandAt(System.Int32,System.Int32,System.Double@,System.Double@,System.Int32@)">
      <summary>
            Gets the plot associated with the error point at the specified location along with 
            the corresponding x and y coordinates of the error value and the index of the error value.
            </summary>
      <param name="x">
            The x-coordinate of the location in client coordinates to search for an error point.
            </param>
      <param name="y">
            The y-coordinate of the location in client coordinates to search for an error point.
            </param>
      <param name="xErrorData">
            Upon return, contains the x-coordinate for the error point at the specified location.
            </param>
      <param name="yErrorData">
            Upon return, contains the y-coordinate for the error point at the specified location.
            </param>
      <param name="index">
            Upon return, contains the index to the error data value at the specified location.
            </param>
      <returns>
            The XYPlot of the error point at the specified location. 
            If there is no error point at the specified location, 
            xErrorData (parameter) and yErrorData (parameter) are set to NaN, 
            index (parameter) is set to -1, 
            and the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.GetXAxisAt(System.Int32,System.Int32)">
      <summary>
            Gets the XAxis at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for an axis.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for an axis.
            </param>
      <returns>
            The XAxis at the specified location. If 
            there is no axis at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.GetYAxisAt(System.Int32,System.Int32)">
      <summary>
            Gets the YAxis at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for an axis.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for an axis.
            </param>
      <returns>
            The YAxis at the specified location. If 
            there is no axis at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.DrawOriginLines(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the origin lines in the plot area of the graph.
            </summary>
      <param name="args">
            A ComponentDrawArgs that contains the drawing data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">args (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnBeforeDrawPlot(NationalInstruments.UI.BeforeDrawXYPlotEventArgs)">
      <summary>
            Raises the BeforeDrawPlot event.
            </summary>
      <param name="e">
            A BeforeDrawXYPlotEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnAfterDrawPlot(NationalInstruments.UI.AfterDrawXYPlotEventArgs)">
      <summary>
            Raises the AfterDrawPlot event.
            </summary>
      <param name="e">
            An AfterDrawXYPlotEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnXAxesChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the XAxesChanged event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnAfterMoveCursor(NationalInstruments.UI.AfterMoveXYCursorEventArgs)">
      <summary>
            Raises the AfterMoveCursor event.
            </summary>
      <param name="e">
            An AfterMoveXYCursorEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnAfterDrawCursor(NationalInstruments.UI.AfterDrawXYCursorEventArgs)">
      <summary>
            Raises the AfterDrawCursor event.
            </summary>
      <param name="e">
            An AfterDrawXYCursorEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnBeforeMoveCursor(NationalInstruments.UI.BeforeMoveXYCursorEventArgs)">
      <summary>
            Raises the BeforeMoveCursor event.
            </summary>
      <param name="e">
            A BeforeMoveXYCursorEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnBeforeDrawCursor(NationalInstruments.UI.BeforeDrawXYCursorEventArgs)">
      <summary>
            Raises the BeforeDrawCursor event.
            </summary>
      <param name="e">
            An BeforeDrawXYCursorEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnCursorsChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the CursorsChanged event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnAnnotationsChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the AnnotationsChanged event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnAfterDrawPointAnnotation(NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs)">
      <summary>
            Raises the AfterDrawPointAnnotation event.
            </summary>
      <param name="e">
            An AfterDrawXYPointAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnBeforeDrawPointAnnotation(NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs)">
      <summary>
            Raises the BeforeDrawPointAnnotation event.
            </summary>
      <param name="e">
            An BeforeDrawXYPointAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnAfterDrawRangeAnnotation(NationalInstruments.UI.AfterDrawXYRangeAnnotationEventArgs)">
      <summary>
            Raises the AfterDrawRangeAnnotation event.
            </summary>
      <param name="e">
            An AfterDrawXYRangeAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnBeforeDrawRangeAnnotation(NationalInstruments.UI.BeforeDrawXYRangeAnnotationEventArgs)">
      <summary>
            Raises the BeforeDrawRangeAnnotation event.
            </summary>
      <param name="e">
            An BeforeDrawXYRangeAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnAfterDragAnnotationCaption(NationalInstruments.UI.AfterDragXYAnnotationCaptionEventArgs)">
      <summary>
            Raises the AfterDragAnnotationCaption event.
            </summary>
      <param name="e">
            An AfterDragXYAnnotationCaptionEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnBeforeDragAnnotationCaption(NationalInstruments.UI.BeforeDragXYAnnotationCaptionEventArgs)">
      <summary>
            Raises the BeforeDragAnnotationCaption event.
            </summary>
      <param name="e">
            An BeforeDragXYAnnotationCaptionEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnXAxisRangeChanged(NationalInstruments.UI.XAxisEventArgs)">
      <summary>
            Raises the XAxisRangeChanged event.
            </summary>
      <param name="e">
            An XAxisEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnYAxesChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the YAxesChanged event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnYAxisRangeChanged(NationalInstruments.UI.YAxisEventArgs)">
      <summary>
            Raises the YAxisRangeChanged event.
            </summary>
      <param name="e">
            A YAxisEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.XYGraph.OnPlotDataChanged(NationalInstruments.UI.XYPlotDataChangedEventArgs)">
      <summary>
            Raises the PlotDataChanged event.
            </summary>
      <param name="e">
            An XYPlotDataChangedEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.XYGraph.XAxes">
      <summary>
            Gets the collection of x axes on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.XYGraph.YAxes">
      <summary>
            Gets the collection of y axes on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.XYGraph.Cursors">
      <summary>
            Gets the collection of plot area cursors on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.XYGraph.Annotations">
      <summary>
            Gets the collection of annotations on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.XAxesChanged">
      <summary>
            Occurs when the content of the XAxes collection
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.XAxisRangeChanged">
      <summary>
            Occurs when the range of an x-axis in the XAxes collection
            of the graph changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.YAxesChanged">
      <summary>
            Occurs when the content of the YAxes collection
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.YAxisRangeChanged">
      <summary>
            Occurs when the range of a y-axis in the YAxes collection
            of the graph changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.BeforeDrawPlot">
      <summary>
            Occurs before a plot is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.AfterDrawPlot">
      <summary>
            Occurs after a plot is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.AfterMoveCursor">
      <summary>
            Occurs after a cursor has been moved.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.AfterDrawCursor">
      <summary>
            Occurs after a cursor is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.BeforeMoveCursor">
      <summary>
            Occurs before a cursor is moved.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.BeforeDrawCursor">
      <summary>
            Occurs before a cursor is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.CursorsChanged">
      <summary>
            Occurs when the content of the Cursors collection
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.AnnotationsChanged">
      <summary>
            Occurs when the content of the Annotations collection
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.BeforeDrawPointAnnotation">
      <summary>
            Occurs before a point annotation is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.AfterDrawPointAnnotation">
      <summary>
            Occurs after a point annotation is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.BeforeDrawRangeAnnotation">
      <summary>
            Occurs before a range annotation is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.AfterDrawRangeAnnotation">
      <summary>
            Occurs after a range annotation is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.BeforeDragAnnotationCaption">
      <summary>
            Occurs before an annotation caption is dragged.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.AfterDragAnnotationCaption">
      <summary>
            Occurs after an annotation caption has been dragged.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.XYGraph.PlotDataChanged">
      <summary>
            Occurs when a new set of data is plotted on a plot that is contained in the graph plot collection.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.Legend">
      <summary>
            Represents a Measurement Studio Windows Forms legend control to display symbols and descriptions of another object, such as the plots or cursors of a graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.#ctor">
      <summary>
            Initializes a new instance of the Legend class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.OnItemLayoutModeChanged(System.EventArgs)">
      <summary>
            Raises the ItemLayoutModeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.OnHorizontalScrollModeChanged(System.EventArgs)">
      <summary>
            Raises the HorizontalScrollModeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.OnVerticalScrollModeChanged(System.EventArgs)">
      <summary>
            Raises the VerticalScrollModeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.OnScrollBarBackColorChanged(System.EventArgs)">
      <summary>
            Raises the ScrollBarBackColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.OnScrollBarForeColorChanged(System.EventArgs)">
      <summary>
            Raises the ScrollBarForeColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.OnScrollBarStyleChanged(System.EventArgs)">
      <summary>
            Raises the ScrollBarStyleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the ControlBase 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.OnItemSizeChanged(System.EventArgs)">
      <summary>
            Raises the ItemSizeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.GetItemAt(System.Int32,System.Int32)">
      <summary>
            Retrieves the LegendItem at the point with the specified
            coordinates.
            </summary>
      <param name="x">
            The X position to evaluate and retrieve the item from.
            </param>
      <param name="y">
            The Y position to evaluate and retrieve the item from.
            </param>
      <returns>
            The LegendItem at the specified location.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.HitTest(System.Int32,System.Int32)">
      <summary>
            Returns a LegendHitTestInfo that specifies
            where on the control the specified point is located.
            </summary>
      <param name="x">
            The horizontal location of the point to be hit-tested, in client coordinates.
            </param>
      <param name="y">
            The vertical location of the point to be hit-tested, in client coordinates.
            </param>
      <returns>
            A LegendHitTestInfo that specifies where on
            the control the x (parameter) and y (parameter) coordinate is located.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.OnBeforeDrawItem(NationalInstruments.UI.BeforeDrawLegendItemEventArgs)">
      <summary>
            Raises the BeforeDrawItem event.
            </summary>
      <param name="e">
            A BeforeDrawLegendItemEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.OnAfterDrawItem(NationalInstruments.UI.AfterDrawLegendItemEventArgs)">
      <summary>
            Raises the AfterDrawItem event.
            </summary>
      <param name="e">
            An AfterDrawLegendItemEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.OnItemsChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the ItemsChanged event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Legend.GetPreferredSize(System.Drawing.Size)">
      <summary>
            Retrieves the size of a rectangular area into which the control can be fitted. This member overrides GetPreferredSize.
            </summary>
      <param name="proposedSize">
            The custom-sized area for a control.
            </param>
      <returns>
            A Size that the control fits within, given the proposedSize (parameter) constraints. 
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Legend.ItemLayoutMode">
      <summary>
            Gets or sets the layout mode for the legend items.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a LegendItemLayoutMode value.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Legend.ItemLayoutModeChanged">
      <summary>
            Occurs when the value of ItemLayoutMode changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Legend.HorizontalScrollMode">
      <summary>
            Gets or sets whether the horizontal scroll bar is enabled or disabled.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a ScrollMode value.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Legend.HorizontalScrollModeChanged">
      <summary>
            Occurs when the value of HorizontalScrollMode changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Legend.VerticalScrollMode">
      <summary>
            Gets or sets whether the vertical scroll bar is enabled or disabled.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a ScrollMode value.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Legend.VerticalScrollModeChanged">
      <summary>
            Occurs when the value of VerticalScrollMode changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Legend.ScrollBarBackColor">
      <summary>
            Gets or sets the background color of the scroll bar.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Legend.ScrollBarBackColorChanged">
      <summary>
            Occurs when the value of ScrollBarBackColor changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Legend.ScrollBarForeColor">
      <summary>
            Gets or sets the foreground color of the scroll bar.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Legend.ScrollBarForeColorChanged">
      <summary>
            Occurs when the value of ScrollBarForeColor changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Legend.ScrollBarStyle">
      <summary>
            Gets or sets the style of the scroll bar.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The specified value is null.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Legend.ScrollBarStyleChanged">
      <summary>
            Occurs when the value of ScrollBarStyle changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Legend.DefaultSize">
      <summary>
            Gets the default size of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Legend.Items">
      <summary>
            Gets the collection of legend items in the legend.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Legend.ItemSize">
      <summary>
            Gets or sets the size of the symbols in the legend control.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The width of the specified size is less than zero.
            
            -or-
            
            The height of the specified size is less than zero.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Legend.ItemSizeChanged">
      <summary>
            Occurs when the value of ItemSize changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Legend.BeforeDrawItem">
      <summary>
            Occurs before a legend item is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Legend.AfterDrawItem">
      <summary>
            Occurs after a legend item is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Legend.ItemsChanged">
      <summary>
            Occurs when the content of the Items collection
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.Knob">
      <summary>
            Represents a Measurement Studio Windows Forms knob control to display numeric
            values.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Knob.#ctor">
      <summary>
            Initializes a new instance of the Knob class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Knob.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the Knob 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Knob.OnKnobStyleChanged(System.EventArgs)">
      <summary>
            Raises the KnobStyleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Knob.DefaultSize">
      <summary>
            Gets the default size of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Knob.KnobStyle">
      <summary>
            Gets or sets the style that determines the appearance of the knob.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Knob.KnobStyleChanged">
      <summary>
            Occurs when the value of KnobStyle 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.ComplexGraph">
      <summary>
            Represents the class for Measurement Studio Windows Forms graphs that accept ComplexDouble data values.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.#ctor">
      <summary>
            Initializes a new instance of the ComplexGraph class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the ComplexGraph 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnPlotLineColorGeneratorChanged(System.EventArgs)">
      <summary>
            Raises the PlotLineColorGeneratorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnUseColorGeneratorChanged(System.EventArgs)">
      <summary>
            Raises the UseColorGeneratorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.PlotComplexAppend(NationalInstruments.ComplexDouble)">
      <summary>
            Plots the imaginary part against the real part of a ComplexDouble data value by appending to the existing data.
            </summary>
      <param name="complexData">
            The ComplexDouble data value to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true, and the imaginary part and real part of complexData (parameter) are special values.
            	
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.PlotComplexAppend(NationalInstruments.ComplexDouble[])">
      <summary>
            Plots the imaginary parts against the real parts of an array of ComplexDouble data values by appending to the existing data.
            </summary>
      <param name="complexData">
            The array of ComplexDouble  data values to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">complexData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true, and the imaginary part and real part of complexData (parameter) are special values.</exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.PlotComplexAppend(NationalInstruments.ComplexDouble[],System.Int32,System.Int32)">
      <summary>
            Plots the imaginary parts against the real parts of a subset of an array of ComplexDouble data values by appending to existing data.
            </summary>
      <param name="complexData">
            The array of ComplexDouble data values to plot.
            </param>
      <param name="startIndex">
            The index in complexData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in complexData (parameter), to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">complexData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in complexData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of complexData (parameter).
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true, and the imaginary part and real part of complexData (parameter) are special values.
            	
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.PlotComplex(NationalInstruments.ComplexDouble)">
      <summary>
            Plots the imaginary part against the real part of a ComplexDouble data value.
            </summary>
      <param name="complexData">
            The ComplexDouble data value to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">the imaginary part and real part of complexData (parameter) are special values.
            	
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.PlotComplex(NationalInstruments.ComplexDouble[])">
      <summary>
            Plots the imaginary parts against the real parts of an array of ComplexDouble data values.
            </summary>
      <param name="complexData">
            The array of ComplexDouble  data values to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">complexData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues
             is 
            true, and
            the imaginary part and real part of complexData (parameter) are special values.</exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.PlotComplex(NationalInstruments.ComplexDouble[],System.Int32,System.Int32)">
      <summary>
            Plots the imaginary parts against the real parts of a subset of an array of ComplexDouble data values.
            </summary>
      <param name="complexData">
            The array of ComplexDouble data values to plot.
            </param>
      <param name="startIndex">
            The index in complexData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in complexData (parameter), to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">complexData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in complexData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of complexData (parameter).
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true, and the imaginary part and real part of complexData (parameter) are special values.</exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.ZoomAroundPoint(System.Single,NationalInstruments.UI.ComplexPlot,NationalInstruments.ComplexDouble)">
      <summary>
            Zooms around the specified data point with the specified zoom factor and reference plot.
            </summary>
      <param name="zoomFactor">
            The percentage to zoom by.
            </param>
      <param name="referencePlot">
            A ComplexPlot to use as the context for complexData (parameter).
            </param>
      <param name="complexData">
            The data point, represented as a ComplexDouble, to zoom around.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">zoomFactor (parameter) is less than or equal to 0.0.
            
            -or-
            zoomFactor (parameter) is NaN,
            NegativeInfinity, or
            PositiveInfinity.
            </exception>
      <exception cref="T:System.ArgumentNullException">referencePlot (parameter) is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The ComplexGraph is not the
            Owner of referencePlot (parameter).
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.ZoomXY(NationalInstruments.UI.ComplexPlot,NationalInstruments.ComplexDouble,System.Double,System.Double)">
      <summary>
            Zooms to the region of the plot area specified by the data value, region width, region height, and
            reference plot.
            </summary>
      <param name="referencePlot">
            A ComplexPlot to use as the context for complexData (parameter),
            width (parameter), and height (parameter).
            </param>
      <param name="complexData">
            The corner of the plot area region to zoom, represented as a ComplexDouble data value.
            </param>
      <param name="width">
            The width in data units of the plot area region to zoom.
            </param>
      <param name="height">
            The height in data units of the plot area region to zoom.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">referencePlot (parameter) is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            	The ComplexGraph is not the
            Owner of referencePlot (parameter).
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">width (parameter) or height (parameter) is
            NaN,
            NegativeInfinity, or
            PositiveInfinity.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.HitTest(System.Int32,System.Int32)">
      <summary>
            Returns a ComplexGraphHitTestInfo that specifies
            where on the control the specified point is located.
            </summary>
      <param name="x">
            The horizontal location of the point to be hit-tested, in client coordinates.
            </param>
      <param name="y">
            The vertical location of the point to be hit-tested, in client coordinates.
            </param>
      <returns>
            A ComplexGraphHitTestInfo that specifies where on
            the control the x (parameter) and y (parameter) coordinate is located.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.GetCursorAt(System.Int32,System.Int32)">
      <summary>
            Gets the cursor at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a cursor.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a cursor.
            </param>
      <returns>
            The ComplexCursor at the specified location. If 
            there is no cursor at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.GetPlotAt(System.Int32,System.Int32)">
      <summary>
            Gets the plot at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <returns>
            The ComplexPlot at the specified location. If 
            there is no plot at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.GetPlotAt(System.Int32,System.Int32,System.Int32@)">
      <summary>
            Gets the plot at the specified location along with the index to the corresponding 
            ComplexDouble data value.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="index">
            Upon return, contains the index to the data value at the specified location.
            </param>
      <returns>
            The ComplexPlot at the specified location. If 
            there is no plot at the specified location, index (parameter) is set to 
            -1, and the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.GetPlotAt(System.Int32,System.Int32,NationalInstruments.ComplexDouble@)">
      <summary>
            Gets the plot at the specified location along with the corresponding ComplexDouble
            data value.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="complexData">
            Upon return, contains the ComplexDouble data value at the specified location.
            </param>
      <returns>
            The ComplexPlot at the specified location. If 
            there is no plot at the specified location, the imaginary part and real part of complexData (parameter) are set to NaN, and the method 
            returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.GetPlotAt(System.Int32,System.Int32,NationalInstruments.ComplexDouble@,System.Int32@)">
      <summary>
            Gets the plot at the specified location along with the corresponding ComplexDouble 
            data value and the index to the x and y data value.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="complexData">
            Upon return, contains the ComplexDouble data value at the specified location.
            </param>
      <param name="index">
            Upon return, contains the index to the data value at the specified location.
            </param>
      <returns>
            The ComplexPlot at the specified location. If 
            there is no plot at the specified location, the imaginary part and real part of complexData (parameter) are set to NaN, 
            index (parameter) is set to -1, and the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.GetErrorBandAt(System.Int32,System.Int32)">
      <summary>
            Gets the plot associated with the error point at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location in client coordinates to search for an error point.
            </param>
      <param name="y">
            The y-coordinate of the location in client coordinates to search for an error point.
            </param>
      <returns>
            The ComplexPlot of the error point at the specified location. 
            If there is no error point at the specified location, 
            the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.GetErrorBandAt(System.Int32,System.Int32,System.Int32@)">
      <summary>
            Gets the plot associated with the error point at the specified location along with 
            the index of the error value.
            </summary>
      <param name="x">
            The x-coordinate of the location in client coordinates to search for an error point.
            </param>
      <param name="y">
            The y-coordinate of the location in client coordinates to search for an error point.
            </param>
      <param name="index">
            Upon return, contains the index to the error data value at the specified location.
            </param>
      <returns>
            The ComplexPlot of the error point at the specified location. 
            If there is no error point at the specified location, 
            index (parameter) is set to -1, 
            and the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.GetErrorBandAt(System.Int32,System.Int32,NationalInstruments.ComplexDouble@)">
      <summary>
            Gets the plot associated with the error point at the specified location along with 
            the corresponding x and y coordinates of the error value.
            </summary>
      <param name="x">
            The x-coordinate of the location in client coordinates to search for an error point.
            </param>
      <param name="y">
            The y-coordinate of the location in client coordinates to search for an error point.
            </param>
      <param name="errorData">
            Upon return, contains the ComplexDouble coordinates 
            for the error point at the specified location.
            </param>
      <returns>
            The ComplexPlot of the error point at the specified location. 
            If there is no error point at the specified location, 
            the imaginary part and real part of errorData (parameter) are set to NaN, 
            and the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.GetErrorBandAt(System.Int32,System.Int32,NationalInstruments.ComplexDouble@,System.Int32@)">
      <summary>
            Gets the plot associated with the error point at the specified location along with 
            the corresponding x and y coordinates of the error value and the index of the error value.
            </summary>
      <param name="x">
            The x-coordinate of the location in client coordinates to search for an error point.
            </param>
      <param name="y">
            The y-coordinate of the location in client coordinates to search for an error point.
            </param>
      <param name="errorData">
            Upon return, contains the ComplexDouble coordinates 
            for the error point at the specified location.
            </param>
      <param name="index">
            Upon return, contains the index to the error data value at the specified location.
            </param>
      <returns>
            The ComplexPlot of the error point at the specified location. 
            If there is no error point at the specified location, 
            the imaginary part and real part of errorData (parameter) are set to NaN, 
            index (parameter) is set to -1, 
            and the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.GetAnnotationAt(System.Int32,System.Int32)">
      <summary>
            Gets the annotation at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for an annotation.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for an annotation.
            </param>
      <returns>
            The ComplexAnnotation at the specified location. If 
            there is no annotation at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.GetXAxisAt(System.Int32,System.Int32)">
      <summary>
            Gets the ComplexXAxis at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for an axis.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for an axis.
            </param>
      <returns>
            The ComplexXAxis at the specified location. If 
            there is no axis at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.GetYAxisAt(System.Int32,System.Int32)">
      <summary>
            Gets the ComplexYAxis at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for an axis.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for an axis.
            </param>
      <returns>
            The ComplexYAxis at the specified location. If 
            there is no axis at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.DrawOriginLines(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the origin lines in the plot area of the complex graph.
            </summary>
      <param name="args">
            A ComponentDrawArgs that contains the drawing data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">args (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnXAxesChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the XAxesChanged event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnYAxesChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the YAxesChanged event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnXAxisRangeChanged(NationalInstruments.UI.ComplexXAxisEventArgs)">
      <summary>
            Raises the XAxisRangeChanged event.
            </summary>
      <param name="e">
            A ComplexXAxisEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnYAxisRangeChanged(NationalInstruments.UI.ComplexYAxisEventArgs)">
      <summary>
            Raises the YAxisRangeChanged event.
            </summary>
      <param name="e">
            A ComplexYAxisEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnPlotDataChanged(NationalInstruments.UI.ComplexPlotDataChangedEventArgs)">
      <summary>
            Raises the PlotDataChanged event.
            </summary>
      <param name="e">
            A ComplexPlotDataChangedEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnBeforeDrawPlot(NationalInstruments.UI.BeforeDrawComplexPlotEventArgs)">
      <summary>
            Raises the BeforeDrawPlot event.
            </summary>
      <param name="e">
            A BeforeDrawComplexPlotEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnAfterDrawPlot(NationalInstruments.UI.AfterDrawComplexPlotEventArgs)">
      <summary>
            Raises the AfterDrawPlot event.
            </summary>
      <param name="e">
            An AfterDrawComplexPlotEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnAfterMoveCursor(NationalInstruments.UI.AfterMoveComplexCursorEventArgs)">
      <summary>
            Raises the AfterMoveCursor event.
            </summary>
      <param name="e">
            An AfterMoveComplexCursorEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnAfterDrawCursor(NationalInstruments.UI.AfterDrawComplexCursorEventArgs)">
      <summary>
            Raises the AfterDrawCursor event.
            </summary>
      <param name="e">
            An AfterDrawComplexCursorEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnBeforeMoveCursor(NationalInstruments.UI.BeforeMoveComplexCursorEventArgs)">
      <summary>
            Raises the BeforeMoveCursor event.
            </summary>
      <param name="e">
            A BeforeMoveComplexCursorEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnBeforeDrawCursor(NationalInstruments.UI.BeforeDrawComplexCursorEventArgs)">
      <summary>
            Raises the BeforeDrawCursor event.
            </summary>
      <param name="e">
            A BeforeDrawComplexCursorEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnCursorsChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the CursorsChanged event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnAnnotationsChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the AnnotationsChanged event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnAfterDrawComplexPointAnnotation(NationalInstruments.UI.AfterDrawComplexPointAnnotationEventArgs)">
      <summary>
            Raises the AfterDrawComplexPointAnnotation event.
            </summary>
      <param name="e">
            An AfterDrawComplexPointAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnBeforeDrawComplexPointAnnotation(NationalInstruments.UI.BeforeDrawComplexPointAnnotationEventArgs)">
      <summary>
            Raises the BeforeDrawComplexPointAnnotation event.
            </summary>
      <param name="e">
            A BeforeDrawComplexPointAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnAfterDrawComplexRangeAnnotation(NationalInstruments.UI.AfterDrawComplexRangeAnnotationEventArgs)">
      <summary>
            Raises the AfterDrawComplexRangeAnnotation event.
            </summary>
      <param name="e">
            An AfterDrawComplexRangeAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnBeforeDrawComplexRangeAnnotation(NationalInstruments.UI.BeforeDrawComplexRangeAnnotationEventArgs)">
      <summary>
            Raises the BeforeDrawComplexRangeAnnotation event.
            </summary>
      <param name="e">
            A BeforeDrawComplexRangeAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnAfterDrawMagnitudePhaseRangeAnnotation(NationalInstruments.UI.AfterDrawMagnitudePhaseRangeAnnotationEventArgs)">
      <summary>
            Raises the AfterDrawMagnitudePhaseRangeAnnotation event.
            </summary>
      <param name="e">
            An AfterDrawMagnitudePhaseRangeAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnBeforeDrawMagnitudePhaseRangeAnnotation(NationalInstruments.UI.BeforeDrawMagnitudePhaseRangeAnnotationEventArgs)">
      <summary>
            Raises the BeforeDrawMagnitudePhaseRangeAnnotation event.
            </summary>
      <param name="e">
            A BeforeDrawMagnitudePhaseRangeAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnAfterDrawMagnitudeCircleAnnotation(NationalInstruments.UI.AfterDrawMagnitudeCircleAnnotationEventArgs)">
      <summary>
            Raises the AfterDrawMagnitudeCircleAnnotation event.
            </summary>
      <param name="e">
            An AfterDrawMagnitudeCircleAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnBeforeDrawMagnitudeCircleAnnotation(NationalInstruments.UI.BeforeDrawMagnitudeCircleAnnotationEventArgs)">
      <summary>
            Raises the BeforeDrawMagnitudeCircleAnnotation event.
            </summary>
      <param name="e">
            A BeforeDrawMagnitudeCircleAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnAfterDragAnnotationCaption(NationalInstruments.UI.AfterDragComplexAnnotationCaptionEventArgs)">
      <summary>
            Raises the AfterDragAnnotationCaption event.
            </summary>
      <param name="e">
            An AfterDragComplexAnnotationCaptionEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ComplexGraph.OnBeforeDragAnnotationCaption(NationalInstruments.UI.BeforeDragComplexAnnotationCaptionEventArgs)">
      <summary>
            Raises the BeforeDragAnnotationCaption event.
            </summary>
      <param name="e">
            A BeforeDragComplexAnnotationCaptionEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ComplexGraph.Plots">
      <summary>
            Gets the collection of plots on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ComplexGraph.PlotLineColorGenerator">
      <summary>
            Gets or sets the ColorGenerator that assigns different colors to plots.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ComplexGraph.UseColorGenerator">
      <summary>
            Gets or sets whether PlotLineColorGenerator is enabled or disabled. 
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ComplexGraph.XAxes">
      <summary>
            Gets the collection of x axes on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ComplexGraph.YAxes">
      <summary>
            Gets the collection of y axes on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ComplexGraph.Annotations">
      <summary>
            Gets the collection of annotations on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ComplexGraph.Cursors">
      <summary>
            Gets the collection of plot area cursors on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ComplexGraph.InteractionMode">
      <summary>
            Gets or sets the user interactions that are supported by the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ComplexGraph.InteractionModeDefault">
      <summary>
            Gets or sets the user interaction that is enabled on the graph without the use of a modifier key.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.XAxesChanged">
      <summary>
            Occurs when the content of the XAxes collection
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.YAxesChanged">
      <summary>
            Occurs when the content of the YAxes collection
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.PlotDataChanged">
      <summary>
            Occurs when a new set of data is plotted on a plot that is contained in the graph plot collection.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.BeforeDrawPlot">
      <summary>
            Occurs before a plot is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.AfterDrawPlot">
      <summary>
            Occurs after a plot is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.XAxisRangeChanged">
      <summary>
            Occurs when the range of an x-axis in the XAxes collection
            of the graph changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.YAxisRangeChanged">
      <summary>
            Occurs when the range of a y-axis in the YAxes collection
            of the graph changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.PlotLineColorGeneratorChanged">
      <summary>
            Occurs when the PlotLineColorGenerator property is changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.UseColorGeneratorChanged">
      <summary>
            Occurs when the UseColorGenerator property  is changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.AfterMoveCursor">
      <summary>
            Occurs after a cursor has been moved.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.AfterDrawCursor">
      <summary>
            Occurs after a cursor is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.BeforeMoveCursor">
      <summary>
            Occurs before a cursor is moved.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.BeforeDrawCursor">
      <summary>
            Occurs before a cursor is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.CursorsChanged">
      <summary>
            Occurs when the content of the Cursors collection
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.AnnotationsChanged">
      <summary>
            Occurs when the content of the Annotations collection
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.BeforeDrawComplexPointAnnotation">
      <summary>
            Occurs before a point annotation is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.AfterDrawComplexPointAnnotation">
      <summary>
            Occurs after a point annotation is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.BeforeDrawComplexRangeAnnotation">
      <summary>
            Occurs before a range annotation is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.AfterDrawComplexRangeAnnotation">
      <summary>
            Occurs after a range annotation is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.BeforeDrawMagnitudePhaseRangeAnnotation">
      <summary>
            Occurs before a MagnitudePhaseRangeAnnotation
            is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.AfterDrawMagnitudePhaseRangeAnnotation">
      <summary>
            Occurs after a MagnitudePhaseRangeAnnotation
            is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.BeforeDrawMagnitudeCircleAnnotation">
      <summary>
            Occurs before a MagnitudeCircle annotation is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.AfterDrawMagnitudeCircleAnnotation">
      <summary>
            Occurs after a MagnitudeCircle annotation is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.BeforeDragAnnotationCaption">
      <summary>
            Occurs before an annotation caption is dragged.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ComplexGraph.AfterDragAnnotationCaption">
      <summary>
            Occurs after an annotation caption has been dragged.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.ScatterGraph">
      <summary>
            Represents the class for Measurement Studio Windows Forms graphs that accept both x and y data values.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.#ctor">
      <summary>
            Initializes a new instance of the ScatterGraph class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the ScatterGraph 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.OnPlotLineColorGeneratorChanged(System.EventArgs)">
      <summary>
            Raises the PlotLineColorGeneratorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.OnUseColorGeneratorChanged(System.EventArgs)">
      <summary>
            Raises the UseColorGeneratorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotXYAppendMultiple(System.Double[],System.Double[0:,0:])">
      <summary>
            Plots a 2D array of y values with the default data orientation against an 
            array of x values by appending the x and y values to the existing data.
            </summary>
      <param name="xData">
            The x values to append.
            </param>
      <param name="yData">
            The 2D array of y values to append.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            
            -or-
            yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">xData (parameter) and yData (parameter) arrays have different lengths.
            
            -or-
            

ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            


            -or-
            ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotXYAppendMultiple(System.Double[],System.Double[0:,0:],NationalInstruments.UI.DataOrientation)">
      <summary>
            Plots a 2D array of y values with the specified orientation against an array
            of x values by appending the x and y values to the existing data.
            </summary>
      <param name="xData">
            The array of x values to append.
            </param>
      <param name="yData">
            The 2D array of y values to append.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation
            of data in yData (parameter).
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            
            -or-
            yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">xData (parameter) and yData (parameter) arrays have different lengths.
            
            -or-
            

ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            


            -or-
            ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid DataOrientation
            value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotYXAppendMultiple(System.Double[],System.Double[0:,0:])">
      <summary>
            Plots a 2D array of x values with the default data orientation against an 
            array of y values by appending the x and y values to the existing data.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
      <param name="xData">
            The 2D array of x values to append.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            
            -or-
            yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">xData (parameter) and yData (parameter) arrays have different lengths.
            
            -or-
            

ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            


            -or-
            ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotYXAppendMultiple(System.Double[],System.Double[0:,0:],NationalInstruments.UI.DataOrientation)">
      <summary>
            Plots a 2D array of x values with the specified orientation against an array
            of y values by appending the x and y values to the existing data.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
      <param name="xData">
            The 2D array of x values to append.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation of
            data in xData (parameter).
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            
            -or-
            yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">xData (parameter) and yData (parameter) arrays have different lengths.
            
            -or-
            

ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            


            -or-
            ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid DataOrientation
            value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotXYMultiple(System.Double[],System.Double[0:,0:])">
      <summary>
            Plots a 2D array of y values with the default orientation against an array 
            of x values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="yData">
            The 2D array of y values to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            
            -or-
            yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">xData (parameter) and yData (parameter) arrays have different lengths.
            
            -or-
            

ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            


            -or-
            ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotXYMultiple(System.Double[],System.Double[0:,0:],NationalInstruments.UI.DataOrientation)">
      <summary>
            Plots a 2D array of y values with the specified orientation against an array
            of x values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="yData">
            The 2D array of y values to plot.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation 
            of values in yData (parameter).
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            
            -or-
            yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">xData (parameter) and yData (parameter) arrays have different lengths.
            
            -or-
            

ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            


            -or-
            ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid DataOrientation
            value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotYXMultiple(System.Double[],System.Double[0:,0:])">
      <summary>
            Plots a 2D array of x values with the default orientation against an array
            of y values.
            </summary>
      <param name="yData">
            The array of y values to plot.
            </param>
      <param name="xData">
            The 2D array of x values to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            
            -or-
            yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">xData (parameter) and yData (parameter) arrays have different lengths.
            
            -or-
            

ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            


            -or-
            ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotYXMultiple(System.Double[],System.Double[0:,0:],NationalInstruments.UI.DataOrientation)">
      <summary>
            Plots a 2D array of x values with the specified orientation against an array
            of y values.
            </summary>
      <param name="yData">
            The array of y values to plot.
            </param>
      <param name="xData">
            The 2D array of x values to plot.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation of
            data in xData (parameter).
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            
            -or-
            yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">xData (parameter) and yData (parameter) arrays have different lengths.
            
            -or-
            

ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            


            -or-
            ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid DataOrientation
            value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotXYAppend(System.Double,System.Double)">
      <summary>
            Plots a single y value against a single x value by appending the x and y value to the
            existing data.
            </summary>
      <param name="xData">
            The x value to append.
            </param>
      <param name="yData">
            The y value to append.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotXYAppend(System.Double[],System.Double[])">
      <summary>
            Plots an array of y values against an array of x values by appending the x and y values to 
            the existing data.
            </summary>
      <param name="xData">
            The x values to append.
            </param>
      <param name="yData">
            The y values to append.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            
            -or-
            yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">xData (parameter) and yData (parameter) arrays have different lengths.
            
            -or-
            

ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            


            -or-
            ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotXYAppend(System.Double[],System.Double[],System.Int32,System.Int32)">
      <summary>
            Plots a subset of an array of y values against an array of x values by appending the x and y values to 
            the existing data.
            </summary>
      <param name="xData">
            The x values to append.
            </param>
      <param name="yData">
            The y values to append.
            </param>
      <param name="startIndex">
            The index in xData (parameter) and yData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in xData (parameter)
            and yData (parameter), to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            
            -or-
            yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in xData (parameter) or yData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of xData (parameter) or yData (parameter).
            </exception>
      <exception cref="T:System.ArgumentException">xData (parameter) and yData (parameter) arrays have different lengths.
            
            -or-
            

ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            


            -or-
            ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotXY(System.Double,System.Double)">
      <summary>
            Plots a single y value against a single x value.
            </summary>
      <param name="xData">
            The x value to plot.
            </param>
      <param name="yData">
            The y value to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotXY(System.Double[],System.Double[])">
      <summary>
            Plots an array of y values against an array of x values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="yData">
            The array of y values to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            
            -or-
            yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">xData (parameter) and yData (parameter) arrays have different lengths.
            
            -or-
            

ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            


            -or-
            ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotXY(System.Double[],System.Double[],System.Int32,System.Int32)">
      <summary>
            Plots a subset of an array of y values against an array of x values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="yData">
            The array of y values to plot.
            </param>
      <param name="startIndex">
            The index in xData (parameter) and yData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in xData (parameter)
            and yData (parameter), to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            
            -or-
            yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in xData (parameter) or yData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of xData (parameter) or yData (parameter).
            </exception>
      <exception cref="T:System.ArgumentException">xData (parameter) and yData (parameter) arrays have different lengths.
            
            -or-
            

ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            


            -or-
            ProcessSpecialValues is true,
            and xData (parameter) and yData (parameter) contain special values
            at the same index.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ScatterGraph.OnDefaultDataOrientationChanged(System.EventArgs)">
      <summary>
            Raises the DefaultDataOrientationChanged 
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ScatterGraph.Plots">
      <summary>
            Gets the collection of plots on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotLineColorGenerator">
      <summary>
            Gets or sets the ColorGenerator that assigns different colors to plots.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ScatterGraph.UseColorGenerator">
      <summary>
            Gets or sets whether PlotLineColorGenerator is enabled or disabled. 
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ScatterGraph.DefaultDataOrientation">
      <summary>
            Gets or sets the default orientation of values in a 2D array.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ScatterGraph.PlotLineColorGeneratorChanged">
      <summary>
            Occurs when the PlotLineColorGenerator property  is changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ScatterGraph.UseColorGeneratorChanged">
      <summary>
            Occurs when the UseColorGenerator property  is changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ScatterGraph.DefaultDataOrientationChanged">
      <summary>
            Occurs when the value of DefaultDataOrientation
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.Meter">
      <summary>
            Represents a Measurement Studio Windows Forms meter control to display numeric
            values.</summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Meter.#ctor">
      <summary>
            Initializes a new instance of the Meter class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Meter.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the Meter 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Meter.OnSpindleColorChanged(System.EventArgs)">
      <summary>
            Raises the SpindleColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Meter.OnSpindleVisibleChanged(System.EventArgs)">
      <summary>
            Raises the SpindleVisibleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Meter.OnMeterStyleChanged(System.EventArgs)">
      <summary>
            Raises the MeterStyleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Meter.DefaultSize">
      <summary>
            Gets the default size of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Meter.SpindleColor">
      <summary>
            Gets or sets the color of the base that connects the pointer to the meter.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Meter.SpindleVisible">
      <summary>
            Gets or sets a value indicating if the base that connects the pointer to the meter is visible.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Meter.MeterStyle">
      <summary>
            Gets or sets the style that determines the appearance of the meter.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Meter.SpindleColorChanged">
      <summary>
            Occurs when the value of SpindleColor 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Meter.SpindleVisibleChanged">
      <summary>
            Occurs when the value of SpindleVisible 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Meter.MeterStyleChanged">
      <summary>
            Occurs when the value of MeterStyle 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor">
      <summary>
            Represents a ToolStripPropertyEditor displayed within a 
            ToolStrip.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.#ctor">
      <summary>
            Initializes a new instance of the ToolStripPropertyEditor class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.#ctor(System.Object,System.String)">
      <summary>
            Initializes a new instance of the ToolStripPropertyEditor class
            with the specified object and the property name representing the property to edit at run time.
            </summary>
      <param name="obj">
            The object whose property is edited at run time.
            </param>
      <param name="propertyName">
            The name of the property whose value is edited at run time.
            </param>
      <exception cref="T:System.ArgumentNullException">obj (parameter) is null.
            
            -or-
            propertyName (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">propertyName (parameter) is Empty.
            </exception>
      <exception cref="T:System.ArgumentException">obj (parameter) does not contain a property with the name
            specified in propertyName (parameter).
            
            -or-
            propertyName (parameter) is only a design time property.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the ToolStripPropertyEditor 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.EditValue">
      <summary>
            Edits the value of the property by launching the associated editor.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.OnSubscribeControlEvents(System.Windows.Forms.Control)">
      <summary>
            Subscribes events from the PropertyEditor
            control.
            </summary>
      <param name="control">
            The control from which to subscribe events.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.OnUnsubscribeControlEvents(System.Windows.Forms.Control)">
      <summary>
            Unsubscribes events from the PropertyEditor
            control.
            </summary>
      <param name="control">
            The control from which to unsubscribe events.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.OnRenderModeChanged(System.EventArgs)">
      <summary>
            Raises the RenderModeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.OnBorderStyleChanged(System.EventArgs)">
      <summary>
            Raises the BorderStyleChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.OnPropertyTextAlignChanged(System.EventArgs)">
      <summary>
            Raises the PropertyTextAlignChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.OnInteractionModeChanged(System.EventArgs)">
      <summary>
            Raises the InteractionModeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.OnDisplayModeChanged(System.EventArgs)">
      <summary>
            Raises the DisplayModeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.OnSourceChanged(System.EventArgs)">
      <summary>
            Raises the SourceChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.OnSourceValueChanged(System.EventArgs)">
      <summary>
            Raises the SourceValueChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.OnSourceValueWarning(NationalInstruments.UI.PropertyEditorSourceValueWarningEventArgs)">
      <summary>
            Raises the SourceValueWarning
            event.
            </summary>
      <param name="e">
            A PropertyEditorSourceValueWarningEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.OnParentChanged(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)">
      <summary>
            Raises the ParentChanged
            event.
            </summary>
      <param name="oldParent">
            The original parent of the item.
            </param>
      <param name="newParent">
            The new parent of the item.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.ThrowExceptionIfDisposed">
      <summary>
            Throws an ObjectDisposedException if the object has been disposed.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.Site">
      <summary>
            Gets or sets the site of the hosted control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.PropertyEditor">
      <summary>
            Gets the ToolStripPropertyEditor that the
            ToolStripPropertyEditor is hosting.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.RenderMode">
      <summary>
            Gets or sets the style used to draw the ToolStripPropertyEditor.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is a PropertyEditorRenderMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.BorderStyle">
      <summary>
            Gets or sets the style used to draw the border of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a BorderStyle value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.PropertyTextAlign">
      <summary>
            Gets or sets whether the text aligns in the center of the control, on the left of the control, or on the right of the control.</summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a HorizontalAlignment value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.InteractionMode">
      <summary>
            Gets or sets the interactions supported by the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a PropertyEditorInteractionMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.DisplayMode">
      <summary>
            Gets or sets whether the property editor displays a painted representation of the value, a textual representation of the value, or both.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a PropertyEditorDisplayMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.Source">
      <summary>
            Gets or sets the source that represents the property to be edited at run time.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.SourceValue">
      <summary>
            Gets or sets the value of the property.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.FormattedSourceValue">
      <summary>
            Gets the string representation of the property value.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.IsEditingValue">
      <summary>
            Gets a value indicating if the ToolStripPropertyEditor
            is currently editing the value of the property using the associated editor.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.RenderModeChanged">
      <summary>
            Occurs when the value of RenderMode changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.BorderStyleChanged">
      <summary>
            Occurs when the value of BorderStyle changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.PropertyTextAlignChanged">
      <summary>
            Occurs when the value of PropertyTextAlign changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.InteractionModeChanged">
      <summary>
            Occurs when the value of InteractionMode changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.DisplayModeChanged">
      <summary>
            Occurs when the value of DisplayMode changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.SourceChanged">
      <summary>
            Occurs when the value of Source changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.SourceValueChanged">
      <summary>
            Occurs when the value of SourceValue changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.ToolStripPropertyEditor.SourceValueWarning">
      <summary>
            Occurs when the SourceValue changes
            to a value that cannot be converted to its corresponding string representation.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph">
      <summary>
            Represents the class for Measurement Studio Windows Forms graphs that accept
            DigitalWaveform data.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.#ctor">
      <summary>
            Initializes a new instance of the DigitalWaveformGraph class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.GetWaveforms">
      <summary>
            Returns a DigitalWaveform array containing DigitalWaveform references.
            </summary>
      <returns>
            A DigitalWaveform array containing DigitalWaveform references.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.ExpandSignals">
      <summary>
            Expands all digital signals on each digital waveform plot. 
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.CollapseSignals">
      <summary>
            Collapses all digital signals on each digital waveform plot. 
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.HitTest(System.Int32,System.Int32)">
      <summary>
            Returns a DigitalWaveformGraphHitTestInfo that specifies
            where on the control the specified point is located.
            </summary>
      <param name="x">
            The horizontal location of the point to be hit-tested, in client coordinates.
            </param>
      <param name="y">
            The vertical location of the point to be hit-tested, in client coordinates.
            </param>
      <returns>
            A DigitalWaveformGraphHitTestInfo that specifies where on
            the control the x (parameter) and y (parameter) coordinate is located.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.GetSignalPlotAt(System.Int32,System.Int32)">
      <summary>
            Gets the digital signal plot at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a signal plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a signal plot.
            </param>
      <returns>
            The DigitalSignalPlot at the specified location. If 
            there is no signal plot at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.GetSignalPlotAt(System.Int32,System.Int32,NationalInstruments.DigitalState@)">
      <summary>
            Gets the digital signal plot at the specified location along with the corresponding DigitalState.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a signal plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a signal plot.
            </param>
      <param name="state">
            Upon return, contains the DigitalState value at the specified location.
            </param>
      <returns>
            The DigitalSignalPlot at the specified location. If 
            there is no signal plot at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.GetSignalPlotAt(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
      <summary>
            Gets the digital signal plot at the specified location along with the corresponding waveform index, sample index,
            and signal index. 
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a signal plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a signal plot.
            </param>
      <param name="waveformIndex">
            Upon return, contains the index of the DigitalWaveform.
            </param>
      <param name="sampleIndex">
            Upon return, contains the DigitalWaveform index of the sample.
            </param>
      <param name="signalIndex">
            Upon return, contains the DigitalWaveform index of the signal.
            </param>
      <returns>
            The DigitalSignalPlot at the specified location. If 
            there is no signal plot at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.GetSignalPlotAt(System.Int32,System.Int32,NationalInstruments.DigitalState@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>
            Gets the digital signal plot at the specified location along with the corresponding DigitalState, 
            waveform index, sample index, and signal index. 
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a signal plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a signal plot.
            </param>
      <param name="state">
            Upon return, contains the DigitalState value at the specified location.
            </param>
      <param name="waveformIndex">
            Upon return, contains the index of the DigitalWaveform.
            </param>
      <param name="sampleIndex">
            Upon return, contains the DigitalWaveform index of the sample.
            </param>
      <param name="signalIndex">
            Upon return, contains the DigitalWaveform index of the signal.
            </param>
      <returns>
            The DigitalSignalPlot at the specified location. If 
            there is no signal plot at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.GetWaveformPlotAt(System.Int32,System.Int32)">
      <summary>
            Gets the digital waveform plot at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a waveform plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a waveform plot.
            </param>
      <returns>
            The DigitalWaveformPlot at the specified location. If 
            there is no waveform plot at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.GetWaveformPlotAt(System.Int32,System.Int32,NationalInstruments.DigitalWaveformSample@)">
      <summary>
            Gets the digital waveform plot at the specified location along with the corresponding DigitalWaveformSample.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a waveform plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a waveform plot.
            </param>
      <param name="sample">
            Upon return, contains the DigitalWaveformSample at the specified location.
            </param>
      <returns>
            The DigitalWaveformPlot at the specified location. If 
            there is no waveform plot at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.GetWaveformPlotAt(System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <summary>
            Gets the digital waveform plot at the specified location along with the corresponding waveform index and sample index.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a waveform plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a waveform plot.
            </param>
      <param name="waveformIndex">
            Upon return, contains the index of the DigitalWaveform.
            </param>
      <param name="sampleIndex">
            Upon return, contains the DigitalWaveform index of the sample.
            </param>
      <returns>
            The DigitalWaveformPlot at the specified location. If 
            there is no waveform plot at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.GetWaveformPlotAt(System.Int32,System.Int32,NationalInstruments.DigitalWaveformSample@,System.Int32@,System.Int32@)">
      <summary>
            Gets the digital waveform plot at the specified location along with the corresponding DigitalWaveformSample, 
            waveform index, and sample index.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a waveform plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a waveform plot.
            </param>
      <param name="sample">
            Upon return, contains the DigitalWaveformSample at the specified location.
            </param>
      <param name="waveformIndex">
            Upon return, contains the index of the DigitalWaveform.
            </param>
      <param name="sampleIndex">
            Upon return, contains the DigitalWaveform index of the sample.
            </param>
      <returns>
            The DigitalWaveformPlot at the specified location. If 
            there is no waveform plot at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.GetService(System.Type)">
      <summary>
            Returns an object that represents a service provided by the control or by the control container.
            </summary>
      <param name="serviceType">
            A service provided by the control.
            </param>
      <returns>
            An Object that represents a service provided by the control.  This value is
            null if the control does not provide the specified service.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the DigitalWaveformGraph 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.PlotWaveform(NationalInstruments.DigitalWaveform)">
      <summary>
            Plots a DigitalWaveform.
            </summary>
      <param name="waveform">
            The DigitalWaveform to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.PlotWaveform(NationalInstruments.DigitalWaveform,System.Boolean)">
      <summary>
            Plots a DigitalWaveform with the choice to copy the digital waveform.
            </summary>
      <param name="waveform">
            The DigitalWaveform to plot.
            </param>
      <param name="copyWaveform">
            Whether to copy the DigitalWaveform.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.PlotWaveforms(NationalInstruments.DigitalWaveform[])">
      <summary>
            Plots a DigitalWaveform array.
            </summary>
      <param name="waveforms">
            The DigitalWaveform array to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.PlotWaveforms(NationalInstruments.DigitalWaveform[],System.Boolean)">
      <summary>
            Plots a DigitalWaveform array with the choice to copy the digital waveforms.
            </summary>
      <param name="waveforms">
            The DigitalWaveform array to plot.
            </param>
      <param name="copyWaveforms">
            Whether to copy the DigitalWaveform array.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnDisplayModeChanged(System.EventArgs)">
      <summary>
            Raises the DisplayModeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnShowGroupLinesChanged(System.EventArgs)">
      <summary>
            Raises the ShowGroupLinesChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnScrollBarStyleChanged(System.EventArgs)">
      <summary>
            Raises the ScrollBarStyleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnScrollBarBackColorChanged(System.EventArgs)">
      <summary>
            Raises the ScrollBarBackColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnScrollBarForeColorChanged(System.EventArgs)">
      <summary>
            Raises the ScrollBarForeColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnVerticalScrollPositionChanged(System.EventArgs)">
      <summary>
            Raises the VerticalScrollPositionChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnVerticalScrollModeChanged(System.EventArgs)">
      <summary>
            Raises the VerticalScrollModeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnHorizontalScrollPositionChanged(System.EventArgs)">
      <summary>
            Raises the HorizontalScrollPositionChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnHorizontalScrollModeChanged(System.EventArgs)">
      <summary>
            Raises the HorizontalScrollModeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnSignalPlotPaddingChanged(System.EventArgs)">
      <summary>
            Raises the SignalPlotPaddingChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnWaveformPlotPaddingChanged(System.EventArgs)">
      <summary>
            Raises the WaveformPlotPaddingChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnPlotHeightChanged(System.EventArgs)">
      <summary>
            Raises the PlotHeightChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnPlotHeightIncrementChanged(System.EventArgs)">
      <summary>
            Raises the PlotHeightIncrementChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnPlotLabelModeChanged(System.EventArgs)">
      <summary>
            Raises the PlotLabelModeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnGroupLineColorChanged(System.EventArgs)">
      <summary>
            Raises the GroupLineColorChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnGroupNodeColorChanged(System.EventArgs)">
      <summary>
            Raises the GroupNodeColorChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnDataChanged(System.EventArgs)">
      <summary>
            Raises the DataChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnBeforeCollapseWaveform(NationalInstruments.UI.BeforeDigitalWaveformPlotEventArgs)">
      <summary>
            Raises the BeforeCollapseWaveform event.
            </summary>
      <param name="e">
            A BeforeDigitalWaveformPlotEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnBeforeExpandWaveform(NationalInstruments.UI.BeforeDigitalWaveformPlotEventArgs)">
      <summary>
            Raises the BeforeExpandWaveform event.
            </summary>
      <param name="e">
            A BeforeDigitalWaveformPlotEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnAfterCollapseWaveform(NationalInstruments.UI.AfterDigitalWaveformPlotEventArgs)">
      <summary>
            Raises the AfterCollapseWaveform event.
            </summary>
      <param name="e">
            An AfterDigitalWaveformPlotEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.OnAfterExpandWaveform(NationalInstruments.UI.AfterDigitalWaveformPlotEventArgs)">
      <summary>
            Raises the AfterExpandWaveform event.
            </summary>
      <param name="e">
            An AfterDigitalWaveformPlotEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.Plots">
      <summary>
            Gets the collection of digital waveform plots on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.WaveformPlotTemplate">
      <summary>
            Gets the waveform plot template to use for creating new waveform plots.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.SignalPlotTemplate">
      <summary>
            Gets the signal plot template to use as a template for creating new signal plots.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.DisplayMode">
      <summary>
            Gets or sets whether the graph displays waveforms and signals or displays only signals.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a DigitalWaveformGraphDisplayMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.ShowGroupLines">
      <summary>
            Gets or sets whether the lines that group the signals of the waveform are displayed. </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.InteractionMode">
      <summary>
            Gets or sets the user interactions that are supported by the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.InteractionMouseCursors">
      <summary>
            Gets the collection of properties that you can use to customize mouse cursors for different interactions with the digital waveform graph control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.InteractionModeDefault">
      <summary>
            Gets or sets the user interaction that is enabled on the graph without the use of a modifier key.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.XAxis">
      <summary>
            Gets the x-axis for the digital waveform graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.YAxis">
      <summary>
            Gets the y-axis for the digital waveform graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.ScrollBarBackColor">
      <summary>
            Gets or sets the background color of the horizontal or vertical scroll bar.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.ScrollBarForeColor">
      <summary>
            Gets or sets the foreground color of the horizontal or vertical scroll bar.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.ScrollBarStyle">
      <summary>
            Gets or sets the style of the horizontal or vertical scroll bar.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The specified value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.VerticalScrollPosition">
      <summary>
            Gets or sets the scroll position of the vertical scroll bar to the left or right of the plot area.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a VerticalScrollPosition value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.VerticalScrollMode">
      <summary>
            Gets or sets whether the vertical scroll bar is enabled or disabled.</summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a ScrollMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.HorizontalScrollPosition">
      <summary>
            Gets or sets the scroll position of the horizontal scroll bar at the top or bottom of the plot area.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a HorizontalScrollPosition value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.HorizontalScrollMode">
      <summary>
            Gets or sets whether the horizontal scroll bar is enabled or disabled.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a ScrollMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.SignalPlotPadding">
      <summary>
            Gets or sets the amount of space in pixels between the signal plots.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The specified value is less than zero.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.WaveformPlotPadding">
      <summary>
            Gets or sets the amount of space in pixels between the waveform plots.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The specified value is less than zero.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.PlotHeight">
      <summary>
            Gets or sets the height of the digital plot in pixels. 
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The specified value is less than zero.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.PlotHeightIncrement">
      <summary>
            Gets or sets the value the graph uses to increase or decrease the plot height of the digital waveform graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The specified value is less than zero.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.GroupLineColor">
      <summary>
            Gets or sets the color of the lines that group the signals of the waveform.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.GroupNodeColor">
      <summary>
            Gets or sets the color of the node next to the waveform plot that expands or collapses the signals of the waveform. 
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.PlotLabelMode">
      <summary>
            Gets or sets the plot label mode that determines where the labels for the
            digital plots come from.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The specified value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.BindingData">
      <summary>
            Gets or sets the data when binding to a data source.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.DisplayModeChanged">
      <summary>
            Occurs when the value of DisplayMode
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.ShowGroupLinesChanged">
      <summary>
            Occurs when the value of ShowGroupLines
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.ScrollBarStyleChanged">
      <summary>
            Occurs when the value of ScrollBarStyle
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.ScrollBarBackColorChanged">
      <summary>
            Occurs when the value of ScrollBarBackColor
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.ScrollBarForeColorChanged">
      <summary>
            Occurs when the value of ScrollBarForeColor
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.VerticalScrollPositionChanged">
      <summary>
            Occurs when the value of VerticalScrollPosition
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.VerticalScrollModeChanged">
      <summary>
            Occurs when the value of VerticalScrollMode
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.HorizontalScrollPositionChanged">
      <summary>
            Occurs when the value of HorizontalScrollPosition
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.HorizontalScrollModeChanged">
      <summary>
            Occurs when the value of HorizontalScrollMode
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.SignalPlotPaddingChanged">
      <summary>
            Occurs when the value of SignalPlotPadding changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.WaveformPlotPaddingChanged">
      <summary>
            Occurs when the value of WaveformPlotPadding changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.PlotHeightChanged">
      <summary>
            Occurs when the value of PlotHeight
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.PlotHeightIncrementChanged">
      <summary>
            Occurs when the value of PlotHeightIncrement
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.PlotLabelModeChanged">
      <summary>
            Occurs when the value of PlotLabelMode
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.GroupLineColorChanged">
      <summary>
            Occurs when the value of GroupLineColor
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.GroupNodeColorChanged">
      <summary>
            Occurs when the value of GroupNodeColor
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.DataChanged">
      <summary>
            Occurs when the digital waveform graph data changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.BeforeCollapseWaveform">
      <summary>
            Occurs before a digital signal is collapsed on a digital waveform plot.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.BeforeExpandWaveform">
      <summary>
            Occurs before a digital signal is expanded on a digital waveform plot.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler 
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.AfterCollapseWaveform">
      <summary>
            Occurs after a digital signal is collapsed on a digital waveform plot.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.DigitalWaveformGraph.AfterExpandWaveform">
      <summary>
            Occurs after a digital signal is expanded on a digital waveform plot.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.SwitchArray">
      <summary>
            Represents the array of Measurement Studio Windows Forms Switch
            controls.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.SwitchArray.#ctor">
      <summary>
            Initializes a new instance of the SwitchArray class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.SwitchArray.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the SwitchArray 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.SwitchArray.Clone">
      <summary>
            Creates a new object that is a copy of this instance.
            </summary>
      <returns>
            A new object that is a copy of this instance.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.NumericEditArray">
      <summary>
            Represents the array of Measurement Studio Windows Forms NumericEdit
            controls for displaying and editing numeric values.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEditArray.#ctor">
      <summary>
            Initializes a new instance of the NumericEditArray class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEditArray.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the NumericEditArray 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEditArray.Clone">
      <summary>
            Creates a new object that is a copy of this instance.
            </summary>
      <returns>
            A new object that is a copy of this instance.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEditArray.GetValues">
      <summary>
            Gets the data values of the control.
            </summary>
      <returns>
            A Double array that represents the data values of the control.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEditArray.SetValues(System.Double[])">
      <summary>
            Sets the value of the items in the control to the array of specified values.
            </summary>
      <param name="data">
            The array of values.
            </param>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEditArray.SetValues(System.Double[],System.Int32,System.Int32)">
      <summary>
            Sets the value of the items in the control to the array of specified values using the specified start 
            index and length.
            </summary>
      <param name="data">
            The array of values.
            </param>
      <param name="startIndex">
            The index in data (parameter) at which the data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter), in data (parameter).
            </param>
      <exception cref="T:System.ArgumentNullException">data (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of data (parameter).
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEditArray.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
      <summary>
            Raises the ControlAdded event.
            </summary>
      <param name="e">
            A ControlEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEditArray.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
      <summary>
            Raises the ControlRemoved event.
            </summary>
      <param name="e">
            A ControlEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEditArray.OnValuesChanged(System.EventArgs)">
      <summary>
            Raises the ValuesChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEditArray.BindingData">
      <summary>
            Gets or sets the data when binding to a data source.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEditArray.ValuesChanged">
      <summary>
            Occurs when a new set of data values is passed to the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.InstrumentControlStrip">
      <summary>
            Represents the class for a Measurement Studio .NET Windows Forms control that provides
            a container for ToolStripPropertyEditor
            and other tool strip items.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.InstrumentControlStrip.#ctor">
      <summary>
            Initializes a new instance of the InstrumentControlStrip class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.InstrumentControlStrip.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the InstrumentControlStrip 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.InstrumentControlStrip.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.InstrumentControlStrip.ThrowExceptionIfDisposed">
      <summary>
            Throws an ObjectDisposedException if the object has been disposed.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.Switch">
      <summary>
            Represents a Measurement Studio Windows Forms switch control to display and input Boolean states.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Switch.#ctor">
      <summary>
            Initializes a new instance of the Switch class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Switch.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by Switch.
            </summary>
      <param name="disposing">
            If true, this method releases managed and unmanaged resources. If false, this method releases
            only unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Switch.OnSwitchStyleChanged(System.EventArgs)">
      <summary>
            Raises the SwitchStyleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Switch.OnCursorChanged(System.EventArgs)">
      <summary>
            Raises the CursorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Switch.Clone">
      <summary>
            Creates a new object that is a copy of this instance.
            </summary>
      <returns>
            A new object that is a copy of this instance.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Switch.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
            Raises the PropertyChanged event.
            </summary>
      <param name="e">
            A PropertyChangedEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Switch.EnableBasePropertyChangedEvents">
      <summary>
            Enables PropertyChanged event 
            from being raised when the properties defined in the Control base class
            are changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Switch.DisableBasePropertyChangedEvents">
      <summary>
            Disables PropertyChanged event 
            from being raised when the properties defined in the Control base class
            are changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Switch.DefaultSize">
      <summary>
            Gets the default size of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Switch.SwitchStyle">
      <summary>
            Gets or sets the style of the switch.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The specified value is null.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Switch.SwitchStyleChanged">
      <summary>
            Occurs when the value of SwitchStyle changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Switch.PropertyChanged">
      <summary>
            Occurs when a property on the control changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.NumericEdit">
      <summary>
            Represents a Measurement Studio Windows Forms numeric edit control to display and edit numeric values.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.#ctor">
      <summary>
            Initializes a new instance of the NumericEdit class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.EnableBasePropertyChangedEvents">
      <summary>
            Enables PropertyChanged event 
            from being raised when the properties defined in the NumericUpDown base class
            are changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.DisableBasePropertyChangedEvents">
      <summary>
            Disables PropertyChanged event 
            from being raised when the properties defined in the NumericUpDown base class
            are changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by NumericEdit and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.ThrowExceptionIfDisposed">
      <summary>
            Raises an ObjectDisposedException if the object has been disposed.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnBackColorChanged(System.EventArgs)">
      <summary>
            Raises the BackColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnForeColorChanged(System.EventArgs)">
      <summary>
            Raises the ForeColorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.MoveNext">
      <summary>
            Moves the value of the control to the next  value as specified by CoercionMode.
            </summary>
      <returns>true if the next value is within Range.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.MovePrevious">
      <summary>
            Moves the value of the control to the previous value as specified by CoercionMode.
            </summary>
      <returns>true if the previous value is within Range.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.UpdateEditText">
      <summary>
            Updates the text displayed in the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnCursorChanged(System.EventArgs)">
      <summary>
            Raises the CursorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.GetService(System.Type)">
      <summary>
            Returns an object that represents a service provided by the control or by its container.
            </summary>
      <param name="service">
            A service provided by the control.
            </param>
      <returns>
            An Object that represents a service provided by the control.  This value is
            null if the control does not provide the specified service.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            Raises the KeyDown event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>
            Raises the KeyUp event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnTextBoxTextChanged(System.Object,System.EventArgs)">
      <summary>
            Raises the TextChanged event.
            </summary>
      <param name="source">
            The source of the event.
            </param>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnTextChanged(System.EventArgs)">
      <summary>
            Raises the TextChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnEnter(System.EventArgs)">
      <summary>
            Raises the Enter event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnLeave(System.EventArgs)">
      <summary>
            Raises the Leave event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnTextBoxResize(System.Object,System.EventArgs)">
      <summary>
            Raises the Resize event.
            </summary>
      <param name="source">
            The source of the event.
            </param>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnHandleCreated(System.EventArgs)">
      <summary>
            Raises the HandleCreated event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Raises the Layout event.
            </summary>
      <param name="levent">
            A LayoutEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnFontChanged(System.EventArgs)">
      <summary>
            Raises the FontChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Raises the MouseWheel event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Raises the MouseDown event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Raises the MouseUp event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnMouseLeave(System.EventArgs)">
      <summary>
            Raises the MouseLeave event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.BeginInit">
      <summary>
            Signals to the object that initialization is beginning.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.EndInit">
      <summary>
            Signals to the object that initialization is complete.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnFormatModeChanged(System.EventArgs)">
      <summary>
            Raises the FormatModeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnInteractionModeChanged(System.EventArgs)">
      <summary>
            Raises the InteractionModeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnSourceChanged(System.EventArgs)">
      <summary>
            Raises the SourceChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnCoercionIntervalChanged(System.EventArgs)">
      <summary>
            Raises the CoercionIntervalChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnCoercionIntervalBaseChanged(System.EventArgs)">
      <summary>
            Raises the CoercionIntervalBaseChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnRangeChanged(System.EventArgs)">
      <summary>
            Raises the RangeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnCoercionModeChanged(System.EventArgs)">
      <summary>
            Raises the CoercionModeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnValueChanged(System.EventArgs)">
      <summary>
            Raises the ValueChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnValidationModeChanged(System.EventArgs)">
      <summary>
            Raises the ValidationModeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnOutOfRangeModeChanged(System.EventArgs)">
      <summary>
            Raises the OutOfRangeModeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnUpDownAlignChanged(System.EventArgs)">
      <summary>
            Raises the UpDownAlignChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnImmediateUpdatesChanged(System.EventArgs)">
      <summary>
            Raises the ImmediateUpdatesChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnBeforeChangeValue(NationalInstruments.UI.BeforeChangeNumericValueEventArgs)">
      <summary>
            Raises the BeforeChangeValue event.
            </summary>
      <param name="e">
            A BeforeChangeNumericValueEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnAfterChangeValue(NationalInstruments.UI.AfterChangeNumericValueEventArgs)">
      <summary>
            Raises the AfterChangeValue event.
            </summary>
      <param name="e">
            An AfterChangeNumericValueEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnUpButtonClicked(System.EventArgs)">
      <summary>
            Raises the UpButtonClicked event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnDownButtonClicked(System.EventArgs)">
      <summary>
            Raises the DownButtonClicked event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.Clone">
      <summary>
            Creates a new object that is a copy of this instance.
            </summary>
      <returns>
            A new object that is a copy of this instance.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.NumericEdit.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
            Raises the PropertyChanged event.
            </summary>
      <param name="e">
            A PropertyChangedEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.BackColor">
      <summary>
            Gets or sets the background color of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.ForeColor">
      <summary>
            Gets or sets the foreground color of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.FormatMode">
      <summary>
            Gets or sets the mode used to format the value of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.InteractionMode">
      <summary>
            Gets or sets the user interactions that are supported by the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.UpDownAlign">
      <summary>
            Gets or sets the alignment of the increment and decrement buttons.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The assigned value is not one of the LeftRightAlignment values.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.Source">
      <summary>
            Gets or sets the control that is connected to the numeric edit control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.CoercionInterval">
      <summary>
            Gets or sets the interval used for coercing the value.  
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is NaN, PositiveInfinity, or NegativeInfinity.
            
            -or-
            
            The value is 0.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.CoercionIntervalBase">
      <summary>
            Gets or sets the base of the interval used for coercing the value.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is PositiveInfinity or NegativeInfinity.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.Range">
      <summary>
            Gets or sets the minimum and maximum values of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            The value is Empty.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.CoercionMode">
      <summary>
            Gets or sets the mode used to coerce the value of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.Value">
      <summary>
            Gets or sets the value of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is NaN.
            
            -or-
            OutOfRangeMode is 
            ThrowException and the value is less 
            than Minimum,
            or value is greater than Maximum.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.OutOfRangeMode">
      <summary>
            Gets or sets the behavior of the control when the value is out of range.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a NumericOutOfRangeMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.ImmediateUpdates">
      <summary>
            Gets or sets a value indicating if the control updates immediately when invalidated.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.Text">
      <summary>
            Gets or sets the string displayed in the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.FormattedValue">
      <summary>
            Gets the value of the control formatted as a string.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.ValidationMode">
      <summary>
            Gets or sets the mode used to validate data entry into the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a NumericEditValidationMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.InteractionMouseCursors">
      <summary>
            Gets the collection of properties that you can use to customize mouse cursors for different interactions with the numeric edit control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.NumericEdit.Cursor">
      <summary>
            Gets or sets the cursor that is displayed when the mouse pointer is over the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.FormatModeChanged">
      <summary>
            Occurs when the value of FormatMode changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.InteractionModeChanged">
      <summary>
            Occurs when the value of InteractionMode changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.SourceChanged">
      <summary>
            Occurs when the value of Source changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.CoercionIntervalChanged">
      <summary>
            Occurs when the value of CoercionInterval changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.CoercionIntervalBaseChanged">
      <summary>
            Occurs when the value of CoercionIntervalBase changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.RangeChanged">
      <summary>
            Occurs when the value of Range changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.CoercionModeChanged">
      <summary>
            Occurs when the value of CoercionMode changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.ValueChanged">
      <summary>
            Occurs when the Value property changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.ValidationModeChanged">
      <summary>
            Occurs when the value of ValidationMode changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.OutOfRangeModeChanged">
      <summary>
            Occurs when the value of OutOfRangeMode 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.UpDownAlignChanged">
      <summary>
            Occurs when the value of UpDownAlign changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.ImmediateUpdatesChanged">
      <summary>
            Occurs when the value of ImmediateUpdates changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.BeforeChangeValue">
      <summary>
            Occurs before the Value property changes, allowing the change event to be cancelled.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.AfterChangeValue">
      <summary>
            Occurs after the Value property has changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.UpButtonClicked">
      <summary>
            Occurs when the up button is clicked or the mouse wheel is scrolled upward.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.DownButtonClicked">
      <summary>
            Occurs when the down  button is clicked or the mouse wheel is scrolled downward.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.NumericEdit.PropertyChanged">
      <summary>
            Occurs when a property on the control changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.IntensityGraph">
      <summary>
                Represents the class for Measurement Studio Windows Forms graphs that plot three-dimensional data on a two-dimensional plot with color representing the third dimension.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.#ctor">
      <summary>
            Initializes a new instance of the IntensityGraph class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.DrawOriginLines(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the origin lines in the plot area of the graph.
            </summary>
      <param name="args">
            A ComponentDrawArgs that contains the drawing data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">args (parameter) is null.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.Plot(System.Double[0:,0:])">
      <summary>
            Plots a 2D rectangular array of values.
            </summary>
      <param name="zData">
            The array of values to plot.
            </param>
      <exception cref="T:System.ArgumentNullException">zData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            
            		The ColorScale of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of ColorScale.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.Plot(System.Double[0:,0:],System.Boolean)">
      <summary>
            Plots a 2D rectangular array of values, with an option to transpose the input array before plotting.
            </summary>
      <param name="zData">
            The array of values to plot.
            </param>
      <param name="transposeZData">
            A Boolean value specifying whether to transpose the two-dimensional input array.
            </param>
      <exception cref="T:System.ArgumentNullException">zData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            
            		The ColorScale of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of ColorScale.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.Plot(System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Plots a 2D rectangular array against the specified start and increment values.
            </summary>
      <param name="zData">
            The array of values to plot.
            </param>
      <param name="xStart">
            The starting x value.
            </param>
      <param name="xIncrement">
            The value to use to increment x values.
            </param>
      <param name="yStart">
            The starting y value.
            </param>
      <param name="yIncrement">
            The value to use to increment y values.
            </param>
      <exception cref="T:System.ArgumentNullException">zData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">xIncrement (parameter) is less than or equal to zero. 
            
                    -or-
                  yIncrement (parameter) is less than or equal to zero.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            
            		The ColorScale of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of ColorScale.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.Plot(System.Double[0:,0:],System.Double,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Plots a 2D rectangular array of values against the specified start and increment values, 
            with an option to transpose the input array before plotting.
            </summary>
      <param name="zData">
            The array of values to plot.
            </param>
      <param name="xStart">
            The starting x value.
            </param>
      <param name="xIncrement">
            The value to use to increment x values.
            </param>
      <param name="yStart">
            The starting y value.
            </param>
      <param name="yIncrement">
            The value to use to increment y values.
            </param>
      <param name="transposeZData">
            A Boolean value specifying whether to transpose the two-dimensional input array.
            </param>
      <exception cref="T:System.ArgumentNullException">zData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">xIncrement (parameter) is less than or equal to zero. 
            
                    -or-
                  yIncrement (parameter) is less than or equal to zero.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            
            		The ColorScale of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of ColorScale.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.PlotXAppend(System.Double[0:,0:])">
      <summary>
             Plots a 2D rectangular array of values by appending the array to the existing data in the horizontal direction.
             </summary>
      <param name="zData">
             The array of values to plot.
             </param>
      <exception cref="T:System.ArgumentNullException">zData (parameter) is null.
             </exception>
      <exception cref="T:System.ArgumentException">
             		The size of zData (parameter) does not match the size of existing data.
             </exception>
      <exception cref="T:System.InvalidOperationException">
             		The XAxis of the plot is null.
             
             -or-
             
             		The YAxis of the plot is null.
             
             -or-
             
             		The ColorScale of the plot is null.
             </exception>
      <exception cref="T:System.NotSupportedException">
             The Owner of the plot is not null,
             and the Owner of the plot is
             different from the Owner of XAxis.
             
             -or-
             
             The Owner of the plot is not null,
             and the Owner of the plot is
             different from the Owner of YAxis.
             
             -or-
             
             The Owner of the plot is not null,
             and the Owner of the plot is
             different from the Owner of ColorScale.
             </exception>
      <exception cref="T:System.ObjectDisposedException">
             The object has been disposed.
             </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.PlotXAppend(System.Double[0:,0:],System.Boolean)">
      <summary>
            Plots a 2D rectangular array of values by appending the array to the existing data in the horizontal direction, with an option to transpose the input array before plotting.
            </summary>
      <param name="zData">
            The array of values to plot.
            </param>
      <param name="transposeZData">
            A Boolean value specifying whether to transpose the two-dimensional input array.
            </param>
      <exception cref="T:System.ArgumentNullException">zData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            		The size of zData (parameter) does not match the size of existing data.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            
            		The ColorScale of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of ColorScale.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.PlotYAppend(System.Double[0:,0:])">
      <summary>
            Plots a 2D rectangular array of values by appending the array to the existing data in the vertical direction.
            </summary>
      <param name="zData">
            The array of values to plot.
            </param>
      <exception cref="T:System.ArgumentNullException">zData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            		The size of zData (parameter) does not match the size of existing data.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            
            		The ColorScale of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of ColorScale.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.PlotYAppend(System.Double[0:,0:],System.Boolean)">
      <summary>
            Plots a 2D rectangular array of values by appending the array to the existing data in the vertical direction, with an option to transpose the input array before plotting.
            </summary>
      <param name="zData">
            The array of values to plot.
            </param>
      <param name="transposeZData">
            A Boolean value specifying whether to transpose the two-dimensional input array.
            </param>
      <exception cref="T:System.ArgumentNullException">zData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            		The size of zData (parameter) does not match the size of existing data.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            
            		The ColorScale of the plot is null.
            	</exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of ColorScale.
            </exception>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.ZoomAroundPoint(System.Single,NationalInstruments.UI.IntensityPlot,System.Double,System.Double)">
      <summary>
            Zooms around the specified data point with the specified zoom factor and reference plot.
            </summary>
      <param name="zoomFactor">
            The percentage to zoom by.
            </param>
      <param name="referencePlot">
            An IntensityPlot to use as the context for xData (parameter)
            and yData (parameter).
            </param>
      <param name="xData">
            The x data value to zoom around.
            </param>
      <param name="yData">
            The y data value to zoom around.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The zoomFactor (parameter) is less than or equal to 0.0.
            
            -or-
            zoomFactor (parameter) is NaN,
            NegativeInfinity, or
            PositiveInfinity.
            </exception>
      <exception cref="T:System.ArgumentNullException">referencePlot (parameter) is null.
            </exception>
      <exception cref="T:System.NotSupportedException">IntensityGraph is not the
            Owner of referencePlot (parameter).
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.ZoomXY(NationalInstruments.UI.IntensityPlot,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Zooms to the region of the plot area specified by the x location, y location, region width, region height, and
            reference plot.
            </summary>
      <param name="referencePlot">
            An IntensityPlot to use as the context for xData (parameter),
            yData (parameter), width (parameter) and height (parameter).
            </param>
      <param name="xData">
            The x data value of the corner of the plot area region to zoom.
            </param>
      <param name="yData">
            The y data value of the corner of the plot area region to zoom.
            </param>
      <param name="width">
            The width, in data units, of the plot area region to zoom.
            </param>
      <param name="height">
            The height, in data units, of the plot area region to zoom.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">referencePlot (parameter) is null.
            </exception>
      <exception cref="T:System.NotSupportedException">IntensityGraph is not the
            Owner of referencePlot (parameter).
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">width (parameter) or height (parameter) is
            NaN,
            NegativeInfinity, or
            PositiveInfinity.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.HitTest(System.Int32,System.Int32)">
      <summary>
            Returns a IntensityGraphHitTestInfo that specifies
            where on the control the specified point is located.
            </summary>
      <param name="x">
            The horizontal location of the point to hit test, in client coordinates.
            </param>
      <param name="y">
            The vertical location of the point to hit test, in client coordinates.
            </param>
      <returns>
            An IntensityGraphHitTestInfo that specifies where on
            the control the x (parameter) and y (parameter) coordinate is located.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.GetPlotAt(System.Int32,System.Int32)">
      <summary>
            Gets the plot at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <returns>
            The IntensityPlot at the specified location. If 
            there is no plot at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.GetPlotAt(System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <summary>
            Gets the plot at the specified location along with the indices to the corresponding 
            x and y data value.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="xIndex">
            Upon return, contains the index to the x data value at the specified location, which is also the 
            first index to the z data value at the specified location.
            </param>
      <param name="yIndex">
            Upon return, contains the index to the y data value at the specified location, which is also the 
            second index to the z data value at the specified location.
            </param>
      <returns>
            The IntensityPlot at the specified location. If 
            there is no plot at the specified location, xIndex (parameter) and yIndex (parameter) are set to 
            -1, and the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.GetPlotAt(System.Int32,System.Int32,System.Double@,System.Double@,System.Double@)">
      <summary>
            Gets the plot at the specified location along with the corresponding x, y, and z data values.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="xData">
            Upon return, contains the x data value at the specified location.
            </param>
      <param name="yData">
            Upon return, contains the y data value at the specified location.
            </param>
      <param name="zData">
            Upon return, contains the z data value at the specified location.
            </param>
      <returns>
            The IntensityPlot at the specified location. If 
            there is no plot at the specified location, xData (parameter), yData (parameter), and
            zData (parameter) are set to NaN, and the method 
            returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.GetPlotAt(System.Int32,System.Int32,System.Double@,System.Double@,System.Double@,System.Int32@,System.Int32@)">
      <summary>
            Gets the plot at the specified location along with the corresponding x, y, and z
            data values and the index to the x and y data values.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a plot.
            </param>
      <param name="xData">
            Upon return, contains the x data value at the specified location.
            </param>
      <param name="yData">
            Upon return, contains the y data value at the specified location.
            </param>
      <param name="zData">
            Upon return, contains the z data value at the specified location.
            </param>
      <param name="xIndex">
            Upon return, contains the index to the x data value at the specified location, which is also the 
            first index to the z data value at the specified location.
            </param>
      <param name="yIndex">
            Upon return, contains the index to the y data value at the specified location, which is also the 
            second index to the z data value at the specified location.
            </param>
      <returns>
            The IntensityPlot at the specified location. If 
            there is no plot at the specified location, xData (parameter), yData (parameter), and
            zData (parameter) are set to NaN, 
            xIndex (parameter) and yIndex (parameter) are set to -1, and the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.GetXAxisAt(System.Int32,System.Int32)">
      <summary>
            Gets the x axis at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for an axis.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for an axis.
            </param>
      <returns>
            The IntensityXAxis at the specified location. If 
            there is no axis at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.GetYAxisAt(System.Int32,System.Int32)">
      <summary>
            Gets the y axis at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for an axis.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for an axis.
            </param>
      <returns>
            The IntensityYAxis at the specified location. If 
            there is no axis at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.GetColorScaleAt(System.Int32,System.Int32)">
      <summary>
            Gets the color scale at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for an axis.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for an axis.
            </param>
      <returns>
            The ColorScale at the specified location. If 
            there is no axis at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.GetCursorAt(System.Int32,System.Int32)">
      <summary>
            Gets the cursor at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for a cursor.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for a cursor.
            </param>
      <returns>
            The IntensityCursor at the specified location. If 
            there is no cursor at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.GetAnnotationAt(System.Int32,System.Int32)">
      <summary>
            Gets the annotation at the specified location.
            </summary>
      <param name="x">
            The x-coordinate of the location, in client coordinates, to search for an annotation.
            </param>
      <param name="y">
            The y-coordinate of the location, in client coordinates, to search for an annotation.
            </param>
      <returns> 
            The IntensityAnnotation at the specified location. If 
            there is no annotation at the specified location, the method returns null.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnAnnotationsChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the AnnotationsChanged event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains the
            event data. 
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnAfterDrawPointAnnotation(NationalInstruments.UI.AfterDrawIntensityPointAnnotationEventArgs)">
      <summary>
            Raises the AfterDrawPointAnnotation event.
            </summary>
      <param name="e">
            An AfterDrawIntensityPointAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnBeforeDrawPointAnnotation(NationalInstruments.UI.BeforeDrawIntensityPointAnnotationEventArgs)">
      <summary>
            Raises the BeforeDrawPointAnnotation event.
            </summary>
      <param name="e">
            An BeforeDrawIntensityPointAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnAfterDrawRangeAnnotation(NationalInstruments.UI.AfterDrawIntensityRangeAnnotationEventArgs)">
      <summary>
            Raises the AfterDrawRangeAnnotation event.
            </summary>
      <param name="e">
            An AfterDrawIntensityRangeAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnBeforeDrawRangeAnnotation(NationalInstruments.UI.BeforeDrawIntensityRangeAnnotationEventArgs)">
      <summary>
            Raises the BeforeDrawRangeAnnotation event.
            </summary>
      <param name="e">
            An BeforeDrawIntensityRangeAnnotationEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnAfterDragAnnotationCaption(NationalInstruments.UI.AfterDragIntensityAnnotationCaptionEventArgs)">
      <summary>
            Raises the AfterDragAnnotationCaption event.
            </summary>
      <param name="e">
            An AfterDragIntensityAnnotationCaptionEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnBeforeDragAnnotationCaption(NationalInstruments.UI.BeforeDragIntensityAnnotationCaptionEventArgs)">
      <summary>
            Raises the BeforeDragAnnotationCaption event.
            </summary>
      <param name="e">
            An BeforeDragIntensityAnnotationCaptionEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the IntensityGraph 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnBeforeDrawPlot(NationalInstruments.UI.BeforeDrawIntensityPlotEventArgs)">
      <summary>
            Raises the BeforeDrawPlot event.
            </summary>
      <param name="e">
            A BeforeDrawIntensityPlotEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnAfterDrawPlot(NationalInstruments.UI.AfterDrawIntensityPlotEventArgs)">
      <summary>
            Raises the AfterDrawPlot event.
            </summary>
      <param name="e">
            An AfterDrawIntensityPlotEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnPlotDataChanged(NationalInstruments.UI.IntensityPlotDataChangedEventArgs)">
      <summary>
            Raises the PlotDataChanged event.
            </summary>
      <param name="e">
            An IntensityPlotDataChangedEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnXAxisRangeChanged(NationalInstruments.UI.IntensityXAxisEventArgs)">
      <summary>
            Raises the XAxisRangeChanged event.
            </summary>
      <param name="e">
            An IntensityXAxisEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnXAxesChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the XAxesChanged event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnYAxisRangeChanged(NationalInstruments.UI.IntensityYAxisEventArgs)">
      <summary>
            Raises the YAxisRangeChanged event.
            </summary>
      <param name="e">
            An IntensityYAxisEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnYAxesChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the YAxesChanged event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnColorScaleRangeChanged(NationalInstruments.UI.ColorScaleEventArgs)">
      <summary>
            Raises the ColorScaleRangeChanged event.
            </summary>
      <param name="e">
            A ColorScaleEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnColorScalesChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the ColorScalesChanged event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnBeforeDrawCursor(NationalInstruments.UI.BeforeDrawIntensityCursorEventArgs)">
      <summary>
            Raises the BeforeDrawCursor event.
            </summary>
      <param name="e">
            An BeforeDrawIntensityCursorEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnAfterDrawCursor(NationalInstruments.UI.AfterDrawIntensityCursorEventArgs)">
      <summary>
            Raises the AfterDrawCursor event.
            </summary>
      <param name="e">
            An AfterDrawIntensityCursorEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnBeforeMoveCursor(NationalInstruments.UI.BeforeMoveIntensityCursorEventArgs)">
      <summary>
            Raises the BeforeMoveCursor event.
            </summary>
      <param name="e">
            A BeforeMoveIntensityCursorEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnAfterMoveCursor(NationalInstruments.UI.AfterMoveIntensityCursorEventArgs)">
      <summary>
            Raises the AfterMoveCursor event.
            </summary>
      <param name="e">
            An AfterMoveIntensityCursorEventArgs that contains
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.IntensityGraph.OnCursorsChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises the CursorsChanged event.
            </summary>
      <param name="e">
            A CollectionChangeEventArgs that contains the
            event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.IntensityGraph.Annotations">
      <summary>
            Gets the collection of annotations on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.IntensityGraph.Plots">
      <summary>
            Gets the collection of plots on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.IntensityGraph.XAxes">
      <summary>
            Gets the collection of x axes on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.IntensityGraph.YAxes">
      <summary>
            Gets the collection of y axes on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.IntensityGraph.ColorScales">
      <summary>
            Gets the collection of color scales on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.IntensityGraph.Cursors">
      <summary>
            Gets the collection of plot area cursors on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.IntensityGraph.InteractionMode">
      <summary>
            Gets or sets the user interactions that are supported by the intensity graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.AfterDrawPlot">
      <summary>
            Occurs after a plot is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.BeforeDrawPlot">
      <summary>
            Occurs before a plot is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.PlotDataChanged">
      <summary>
            Occurs when a new set of data is plotted on a plot that is contained in the graph plot collection.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.AnnotationsChanged">
      <summary>
            Occurs when the content of the Annotations collection
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.BeforeDrawPointAnnotation">
      <summary>
            Occurs before a point annotation is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.AfterDrawPointAnnotation">
      <summary>
            Occurs after a point annotation is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.BeforeDrawRangeAnnotation">
      <summary>
            Occurs before a range annotation is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.AfterDrawRangeAnnotation">
      <summary>
            Occurs after a range annotation is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.BeforeDragAnnotationCaption">
      <summary>
            Occurs before an annotation caption is dragged.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.AfterDragAnnotationCaption">
      <summary>
            Occurs after an annotation caption has been dragged.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.XAxesChanged">
      <summary>
            Occurs when the content of the XAxes collection
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.XAxisRangeChanged">
      <summary>
            Occurs when the range of an IntensityXAxis in the XAxes collection
            of the graph changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.YAxesChanged">
      <summary>
            Occurs when the content of the YAxes collection
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.YAxisRangeChanged">
      <summary>
            Occurs when the range of an IntensityYAxis in the YAxes collection
            of the graph changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.ColorScalesChanged">
      <summary>
            Occurs when the content of the ColorScales collection
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.ColorScaleRangeChanged">
      <summary>
            Occurs when the range of a ColorScale in the ColorScales collection
            of the graph changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.AfterMoveCursor">
      <summary>
            Occurs after a cursor has been moved.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.AfterDrawCursor">
      <summary>
            Occurs after a cursor is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.BeforeMoveCursor">
      <summary>
            Occurs before a cursor is moved.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.BeforeDrawCursor">
      <summary>
            Occurs before a cursor is drawn.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.IntensityGraph.CursorsChanged">
      <summary>
            Occurs when the content of the Cursors collection
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.WaveformGraph">
      <summary>
            Represents the class for Measurement Studio Windows Forms graphs that accept data as a waveform.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.#ctor">
      <summary>
            Initializes a new instance of the WaveformGraph class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the WaveformGraph 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.OnPlotLineColorGeneratorChanged(System.EventArgs)">
      <summary>
            Raises the PlotLineColorGeneratorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.OnUseColorGeneratorChanged(System.EventArgs)">
      <summary>
            Raises the UseColorGeneratorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains 
            the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.OnBindingMethodChanged(System.EventArgs)">
      <summary>
            Raises the BindingMethodChanged 
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.OnBindingStartChanged(System.EventArgs)">
      <summary>
            Raises the BindingStart 
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.OnBindingIncrementChanged(System.EventArgs)">
      <summary>
            Raises the BindingIncrementChanged 
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.OnBindingDataOrientationChanged(System.EventArgs)">
      <summary>
            Raises the BindingDataOrientationChanged 
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.OnDefaultDataOrientationChanged(System.EventArgs)">
      <summary>
            Raises the DefaultDataOrientationChanged 
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXAppendMultiple(System.Double[0:,0:])">
      <summary>
            Plots a 2D array of x values with the default data orientation against a 
            starting y value by appending the x and y values to the existing data. 
            </summary>
      <param name="xData">
            The 2D array of x values to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotXAppend is called after calling
            PlotY,
            PlotYAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            
            	The increment is a positive value and it was a negative value in a previous call to
            PlotX or 
            PlotXAppend.
            
            -or-
            
            		The increment is a negative value and it was a positive value in a 
            previous call to PlotX or 
            PlotXAppend. 
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXAppendMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.Double)">
      <summary>
            Plots a 2D array of x values with the specified orientation against a starting
            y value by appending the x and y values to the existing
            data using the specified value to increment y values.
            </summary>
      <param name="xData">
            The 2D array of x values to append.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation of
            data in xData (parameter).
            </param>
      <param name="increment">
            The value to use to increment y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid
            DataOrientation value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotXAppend is called after calling
            PlotY,
            PlotYAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous 
            call to PlotXAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotX or 
            PlotXAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXAppendMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.TimeSpan)">
      <summary>
            Plots a 2D array of x values with the specified orientation against a starting
            y value by appending the x and y values to the existing
            data using the specified TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The 2D array of x values to append.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation of
            data in xData (parameter).
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid
            DataOrientation value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotXAppend is called after calling
            PlotY,
            PlotYAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous 
            call to PlotX or 
            PlotXAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotX or 
            PlotXAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXAppendMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.TimeSpan,NationalInstruments.UI.PlotDateTimePrecisionMode)">
      <summary>
            Plots a 2D array of x values with the specified orientation against a starting
            y value with the specified PlotDateTimePrecisionMode. PlotXAppendMultiple appends the x and y values to the existing
            data using the specified TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The 2D array of x values to append.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation of
            data in xData (parameter).
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment y values.
            </param>
      <param name="precisionMode">
            A PlotDateTimePrecisionMode that represents the precision mode to use when plotting the x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid
            DataOrientation value.
            
            or
            precisionMode (parameter) is not a valid PlotDateTimePrecisionMode value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotXAppend is called after calling
            PlotY,
            PlotYAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous 
            call to PlotX or 
            PlotXAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotX or 
            PlotXAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXMultiple(System.Double[0:,0:])">
      <summary>
            Plots a 2D array of x values with the default data orientation against 
            the default starting y value.</summary>
      <param name="xData">
            The 2D array of x values to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.Double,System.Double)">
      <summary>
            Plots a 2D array of x values with the specified data orientation against 
            the specified starting y value. PlotXMultiple uses the 
            specified value to increment y values.
            </summary>
      <param name="xData">
            The 2D array of x values to plot.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation of
            data in xData (parameter).
            </param>
      <param name="start">
            The starting y value.
            </param>
      <param name="increment">
            The value to use to increment y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid 
            DataOrientation value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.DateTime,System.TimeSpan)">
      <summary>
            Plots a 2D array of x values with the specified data orientation against 
            the specified DateTime as the starting y value. PlotXMultiple
            uses the specified TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The 2D array of x values to plot.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation of
            data in xData (parameter).
            </param>
      <param name="start">
            A DateTime that represents the starting y value.
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid
            DataOrientation value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.DateTime,System.TimeSpan,NationalInstruments.UI.PlotDateTimePrecisionMode)">
      <summary>
            Plots a 2D array of x values with the specified data orientation against 
            the specified DateTime as the starting y value with the specified PlotDateTimePrecisionMode. PlotXMultiple
            uses the specified TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The 2D array of x values to plot.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation of
            data in xData (parameter).
            </param>
      <param name="start">
            A DateTime that represents the starting y value.
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment y values.
            </param>
      <param name="precisionMode">
            A PlotDateTimePrecisionMode that represents the precision mode to use when plotting the x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid
            DataOrientation value.
            
            or
            precisionMode (parameter) is not a valid PlotDateTimePrecisionMode value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXAppend(System.Double)">
      <summary>
            Plots a single x value against a starting y value by appending the x and y values to the existing data.
            </summary>
      <param name="xData">
            The x value to append.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotXAppend is called after calling
            PlotY,
            PlotYAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            
            	The increment is a positive value and it was a negative value in a previous call to
            PlotX or 
            PlotXAppend.
            
            -or-
            
            		The increment is a negative value and it was a positive value in a 
            previous call to PlotX or 
            PlotXAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and xData (parameter) and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXAppend(System.Double,System.Double)">
      <summary>
            Plots a single x value against a starting y value by appending the x and y values to the existing data 
            using the specified value to increment y values.
            </summary>
      <param name="xData">
            The x value to append.
            </param>
      <param name="increment">
            The value to use to increment y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotXAppend is called after calling
            PlotY,
            PlotYAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotX or 
            PlotXAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotX or 
            PlotXAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and xData (parameter) and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXAppend(System.Double,System.TimeSpan)">
      <summary>
            Plots a single x value against a starting y value by appending the x and y values to the existing data 
            using the specified TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The x value to append.
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotXAppend is called after calling
            PlotY,
            PlotYAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotX or 
            PlotXAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotX or 
            PlotXAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXAppend(System.Double[])">
      <summary>
            Plots an array of x values against a starting y value by appending the x and y values to the existing data.
            </summary>
      <param name="xData">
            The array of x values to append.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotXAppend is called after calling
            PlotY,
            PlotYAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            
            	The increment is a positive value and it was a negative value in a previous call to
            PlotX or 
            PlotXAppend.
            
            -or-
            
            		The increment is a negative value and it was a positive value in a 
            previous call to PlotX or 
            PlotXAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXAppend(System.Double[],System.Double)">
      <summary>
            Plots an array of x values against a starting y value by appending the x and y values to the existing data 
            using the specified value to increment y values.
            </summary>
      <param name="xData">
            The array of x values to append.
            </param>
      <param name="increment">
            The value to use to increment y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotXAppend is called after calling
            PlotY,
            PlotYAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotX or 
            PlotXAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotX or 
            PlotXAppend.</exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXAppend(System.Double[],System.TimeSpan)">
      <summary>
            Plots an array of x values against a starting y value by appending the x and y values to the existing data 
            using the specified TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The array of x values to append.
            </param>
      <param name="increment">
            A TimeSpan that represents the value used to increment y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotXAppend is called after calling
            PlotY,
            PlotYAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotX or 
            PlotXAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotX or 
            PlotXAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXAppend(System.Double[],System.Int32,System.Int32,System.Double)">
      <summary>
            Plots a subset of an array of x values against a starting y value by appending the x and y values to the existing data 
            using the specified value to increment y values.
            </summary>
      <param name="xData">
            The array of x values to append.
            </param>
      <param name="startIndex">
            The index in xData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in xData (parameter), to plot.
            </param>
      <param name="increment">
            The value used to increment y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in xData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of xData (parameter).
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotXAppend is called after calling
            PlotY,
            PlotYAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotX or 
            PlotXAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotX or 
            PlotXAppend.</exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXAppend(System.Double[],System.Int32,System.Int32,System.TimeSpan)">
      <summary>
            Plots a subset of an array of x values against a starting y value by appending the x and y values to the existing data 
            using the specified TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The array of x values to append.
            </param>
      <param name="startIndex">
            The index in xData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in xData (parameter), to plot.
            </param>
      <param name="increment">
            A TimeSpan that represents the value used to increment y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in xData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of xData (parameter).
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotXAppend is called after calling
            PlotY,
            PlotYAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotX or 
            PlotXAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotX or 
            PlotXAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotXAppend(System.Double[],System.Int32,System.Int32,System.TimeSpan,NationalInstruments.UI.PlotDateTimePrecisionMode)">
      <summary>
            Plots a subset of an array of x values against a starting y value with the specified PlotDateTimePrecisionMode. PlotXAppend appends the x and y values to the existing data 
            using the specified TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The array of x values to append.
            </param>
      <param name="startIndex">
            The index in xData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in xData (parameter), to plot.
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment y values.
            </param>
      <param name="precisionMode">
            A PlotDateTimePrecisionMode that represents the precision mode to be used when plotting the x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in xData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of xData (parameter).
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">precisionMode (parameter) is not a valid PlotDateTimePrecisionMode value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotXAppend is called after calling
            PlotY,
            PlotYAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotX or 
            PlotXAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotX or 
            PlotXAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotX(System.Double)">
      <summary>
            Plots a single x value against the default starting y value.
            </summary>
      <param name="xData">
            The x value to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and xData (parameter) and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotX(System.Double[])">
      <summary>
            Plots an array of x values against the default starting y value using the default increment value.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotX(System.Double[],System.Double,System.Double)">
      <summary>
            Plots an array of x values against the specified starting y value using the specified value
            to increment y values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="start">
            The starting y value.
            </param>
      <param name="increment">
            The value to use to increment y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotX(System.Double[],System.DateTime,System.TimeSpan)">
      <summary>
            Plots an array of x values against the specified DateTime as the starting y value using the 
            specified TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="start">
            A DateTime that represents the starting y value.
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotX(System.Double[],System.Int32,System.Int32,System.Double,System.Double)">
      <summary>
            Plots a subset of an array of x values against the specified starting y value using the specified value
            to increment y values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="startIndex">
            The index in xData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in xData (parameter), to plot.
            </param>
      <param name="start">
            The starting y value.
            </param>
      <param name="increment">
            The value used to increment y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in xData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of xData (parameter).
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotX(System.Double[],System.Int32,System.Int32,System.DateTime,System.TimeSpan)">
      <summary>
            Plots a subset of an array of x values against the specified DateTime as the starting y value using the 
            specified TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="startIndex">
            The index in xData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in xData (parameter), to plot.
            </param>
      <param name="start">
            A DateTime that represents the starting y value.
            </param>
      <param name="increment">
            A TimeSpan that represents the value used to increment y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in xData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of xData (parameter).
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotX(System.Double[],System.Int32,System.Int32,System.DateTime,System.TimeSpan,NationalInstruments.UI.PlotDateTimePrecisionMode)">
      <summary>
            Plots a subset of an array of x values against the specified DateTime as the starting y value with the specified PlotDateTimePrecisionMode. PlotX uses the 
            specified TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="startIndex">
            The index in xData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in xData (parameter), to plot.
            </param>
      <param name="start">
            A DateTime that represents the starting y value.
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment y values.
            </param>
      <param name="precisionMode">
            A PlotDateTimePrecisionMode that represents the precision mode to use when plotting the x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">xData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in xData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of xData (parameter).
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">precisionMode (parameter) is not a valid PlotDateTimePrecisionMode value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and xData (parameter) value at a particular index and its corresponding y value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYAppendMultiple(System.Double[0:,0:])">
      <summary>
            Plots a 2D array of y values with the default data orientation against a 
            starting x value by appending 
            it to the existing data.</summary>
      <param name="yData">
            The 2D array of y values to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotYAppend is called after calling
            PlotX,
            PlotXAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            
            	The increment is a positive value and it was a negative value in a previous call to
            PlotY or 
            PlotYAppend.
            
            -or-
            
            		The increment is a negative value and it was a positive value in a 
            previous call to PlotY or 
            PlotYAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYAppendMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.Double)">
      <summary>
            Plots a 2D array of x values with the specified orientation against a starting
            x value by appending the x and y values to the existing
            data using the specified value to increment x values.
            </summary>
      <param name="yData">
            The 2D array of y values to append.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation of
            data in yData (parameter).
            </param>
      <param name="increment">
            The value to use to increment x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid 
            DataOrientation value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotYAppend is called after calling
            PlotX,
            PlotXAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotY or 
            PlotYAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotY or 
            PlotYAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYAppendMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.TimeSpan)">
      <summary>
            Plots a 2D array of y values with the specified orientation against a starting
            y value by appending the x and y values to the existing
            data using the specified TimeSpan to increment x values.
            </summary>
      <param name="yData">
            The 2D array of y values to append.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation of
            data in yData (parameter).
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid 
            DataOrientation value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotYAppend is called after calling
            PlotX,
            PlotXAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotY or 
            PlotYAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotY or 
            PlotYAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYAppendMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.TimeSpan,NationalInstruments.UI.PlotDateTimePrecisionMode)">
      <summary>
            Plots a 2D array of y values with the specified orientation against a starting
            y value with the specified PlotDateTimePrecisionMode. PlotYAppendMultiple appends the x and y values to the existing
            data using the specified TimeSpan to increment x values.
            </summary>
      <param name="yData">
            The 2D array of y values to append.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation of
            data in yData (parameter).
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment x values.
            </param>
      <param name="precisionMode">
            A PlotDateTimePrecisionMode that represents the precision mode to use when plotting the y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid
            DataOrientation value.
            	
            	or
            	precisionMode (parameter) is not a valid PlotDateTimePrecisionMode value.
            	</exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotYAppend is called after calling
            PlotX,
            PlotXAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotY or 
            PlotYAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotY or 
            PlotYAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYMultiple(System.Double[0:,0:])">
      <summary>
            Plots a 2D array of y values with the default data orientation against 
            the default starting x value.
            </summary>
      <param name="yData">
            The 2D array of y values to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.Double,System.Double)">
      <summary>
            Plots a 2D array of y values with the specified data orientation against 
            the specified starting x value. PlotYMultiple
            uses the specified value to increment x values.
            </summary>
      <param name="yData">
            The 2D array of y values to plot.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation of
            data in yData (parameter).
            </param>
      <param name="start">
            The starting x value.
            </param>
      <param name="increment">
            The value to use to increment x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid 
            DataOrientation value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.DateTime,System.TimeSpan)">
      <summary>
            Plots a 2D array of y values with the specified data orientation against 
            the specified DateTime as the starting x value. PlotYMultiple
            uses the specified TimeSpan to increment y values.
            </summary>
      <param name="yData">
            The 2D array of y values to plot.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation of
            data in yData (parameter).
            </param>
      <param name="start">
            A DateTime that represents the starting x value.
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid 
            DataOrientation value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.DateTime,System.TimeSpan,NationalInstruments.UI.PlotDateTimePrecisionMode)">
      <summary>
            Plots a 2D array of y values with the specified data orientation against 
            the specified DateTime as the starting x value with the specified PlotDateTimePrecisionMode. PlotYMultiple
            uses the specified TimeSpan to increment y values.
            </summary>
      <param name="yData">
            The 2D array of y values to plot.
            </param>
      <param name="orientation">
            A DataOrientation value that specifies the orientation of
            data in yData (parameter).
            </param>
      <param name="start">
            A DateTime that represents the starting x value.
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment x values.
            </param>
      <param name="precisionMode">
            A PlotDateTimePrecisionMode that represents the precision mode to use when plotting the y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">orientation (parameter) is not a valid
            DataOrientation value.
            
            or
            precisionMode (parameter) is not a valid PlotDateTimePrecisionMode value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYAppend(System.Double)">
      <summary>
            Plots a single y value against a starting x value by appending the x and y values to the existing data.
            </summary>
      <param name="yData">
            The y value to append.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotYAppend is called after calling
            PlotX,
            PlotXAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            
            	The increment is a positive value and it was a negative value in a previous call to
            PlotY or 
            PlotYAppend.
            
            -or-
            
            		The increment is a negative value and it was a positive value in a 
            previous call to PlotY or 
            PlotYAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and yData (parameter) and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYAppend(System.Double,System.Double)">
      <summary>
            Plots a single y value against a starting x value by appending the x and y values to the existing data 
            using the specified value to increment x values.
            </summary>
      <param name="yData">
            The y value to append.
            </param>
      <param name="increment">
            The value to use to increment x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotYAppend is called after calling
            PlotX,
            PlotXAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotY or 
            PlotYAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotY or 
            PlotYAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and yData (parameter) and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYAppend(System.Double,System.TimeSpan)">
      <summary>
            Plots a single y value against a starting x value by appending the x and y values to the existing data 
            using the specified TimeSpan to increment x values.
            </summary>
      <param name="yData">
            The y value to append.
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotYAppend is called after calling
            PlotX,
            PlotXAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotY or 
            PlotYAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotY or 
            PlotYAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYAppend(System.Double[])">
      <summary>
            Plots an array of y values against a starting x value by appending the x and y values to the existing data.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotYAppend is called after calling
            PlotX,
            PlotXAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            
            	The increment is a positive value and it was a negative value in a previous call to
            PlotY or 
            PlotYAppend.
            
            -or-
            
            		The increment is a negative value and it was a positive value in a 
            previous call to PlotY or 
            PlotYAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYAppend(System.Double[],System.Double)">
      <summary>
            Plots an array of y values against a starting x value by appending the x and y values to the existing data 
            using the specified value to increment x values.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
      <param name="increment">
            The value to use to increment x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotYAppend is called after calling
            PlotX,
            PlotXAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotY or 
            PlotYAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotY or 
            PlotYAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYAppend(System.Double[],System.TimeSpan)">
      <summary>
            Plots an array of y values against a starting x value by appending the x and y values to the existing data 
            using the specified TimeSpan to increment x values.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
      <param name="increment">
            A TimeSpan that represents the value used to increment x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotYAppend is called after calling
            PlotX,
            PlotXAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotY or 
            PlotYAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotY or 
            PlotYAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYAppend(System.Double[],System.Int32,System.Int32,System.Double)">
      <summary>
            Plots a subset of an array of y values against a starting x value by appending the x and y values to the existing data 
            using the specified value to increment x values.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
      <param name="startIndex">
            The index in yData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in yData (parameter), to plot.
            </param>
      <param name="increment">
            The value used to increment x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in yData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of yData (parameter).
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotYAppend is called after calling
            PlotX,
            PlotXAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotY or 
            PlotYAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotY or 
            PlotYAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYAppend(System.Double[],System.Int32,System.Int32,System.TimeSpan)">
      <summary>
            Plots a subset of an array of y values against a starting x value by appending the x and y values to 
            the existing data using the specified TimeSpan to increment x values.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
      <param name="startIndex">
            The index in yData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in yData (parameter), to plot.
            </param>
      <param name="increment">
            A TimeSpan that represents the value used to increment x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in yData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of yData (parameter).
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotYAppend is called after calling
            PlotX,
            PlotXAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotY or 
            PlotYAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotY or 
            PlotYAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotYAppend(System.Double[],System.Int32,System.Int32,System.TimeSpan,NationalInstruments.UI.PlotDateTimePrecisionMode)">
      <summary>
            Plots a subset of an array of y values against a starting x value with the specified PlotDateTimePrecisionMode. PlotYAppend appends the x and y values to 
            the existing data using the specified TimeSpan to increment x values.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
      <param name="startIndex">
            The index in yData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in yData (parameter), to plot.
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment x values.
            </param>
      <param name="precisionMode">
            A PlotDateTimePrecisionMode that represents the precision mode to use when plotting the y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in yData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of yData (parameter).
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">precisionMode (parameter) is not a valid PlotDateTimePrecisionMode value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotYAppend is called after calling
            PlotX,
            PlotXAppend,
            PlotWaveform``1,
            PlotWaveformAppend``1,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            
            -or-
            increment (parameter) is a positive value and it was a negative value in a previous call to
            PlotY or 
            PlotYAppend.
            
            -or-
            increment (parameter) is a negative value and it was a positive value in a 
            previous call to PlotY or 
            PlotYAppend.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotY(System.Double)">
      <summary>
            Plots a single y value against the default starting x value.
            </summary>
      <param name="yData">
            The y value to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and yData (parameter) and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotY(System.Double[])">
      <summary>
            Plots an array of y values against the default starting x value using the default increment value.</summary>
      <param name="yData">
            The array of y values to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotY(System.Double[],System.Double,System.Double)">
      <summary>
            Plots an array of y values against the specified starting x value using the specified value
            to increment x values.
            </summary>
      <param name="yData">
            The array of y values to plot.
            </param>
      <param name="start">
            The starting x value.
            </param>
      <param name="increment">
            The value to use to increment x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotY(System.Double[],System.DateTime,System.TimeSpan)">
      <summary>
            Plots an array of y values against the specified DateTime as the starting x value using the 
            specified TimeSpan to increment x values.
            </summary>
      <param name="yData">
            The array of y values to plot.
            </param>
      <param name="start">
            A DateTime that represents the starting x value.
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotY(System.Double[],System.Int32,System.Int32,System.Double,System.Double)">
      <summary>
            Plots a subset of an array of y values against the specified starting x value using the specified value
            to increment x values.
            </summary>
      <param name="yData">
            The array of y values to plot.
            </param>
      <param name="startIndex">
            The index in yData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in yData (parameter), to plot.
            </param>
      <param name="start">
            The starting x value.
            </param>
      <param name="increment">
            The value used to increment x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in yData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of yData (parameter).
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotY(System.Double[],System.Int32,System.Int32,System.DateTime,System.TimeSpan)">
      <summary>
            Plots a subset of an array of y values against the specified DateTime as the starting x value using the 
            specified TimeSpan to increment x values.
            </summary>
      <param name="yData">
            The array of y values to plot.
            </param>
      <param name="startIndex">
            The index in yData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in yData (parameter), to plot.
            </param>
      <param name="start">
            A DateTime that represents the starting x value.
            </param>
      <param name="increment">
            A TimeSpan that represents the value used to increment x values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in yData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of yData (parameter).
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotY(System.Double[],System.Int32,System.Int32,System.DateTime,System.TimeSpan,NationalInstruments.UI.PlotDateTimePrecisionMode)">
      <summary>
            Plots a subset of an array of y values against the specified DateTime as the starting x value with the the specified PlotDateTimePrecisionMode.
            PlotY uses the specified time span to increment x values.
            </summary>
      <param name="yData">
            The array of y values to plot.
            </param>
      <param name="startIndex">
            The index in yData (parameter) at which the plot data begins.
            </param>
      <param name="length">
            The number of elements, beginning at startIndex (parameter) in yData (parameter), to plot.
            </param>
      <param name="start">
            A DateTime that represents the starting x value.
            </param>
      <param name="increment">
            A TimeSpan that represents the value to use to increment x values.
            </param>
      <param name="precisionMode">
            A PlotDateTimePrecisionMode that represents the precision mode to use when plotting the y values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">yData (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndex (parameter) is less than 0.
            
            -or-
            startIndex (parameter) is greater than or equal to the
            number of elements in yData (parameter).
            
            -or-
            length (parameter) is less than 0.
            
            -or-
            length (parameter) is greater than the number of elements
            from startIndex (parameter) to the end of yData (parameter).
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">precisionMode (parameter) is not a valid PlotDateTimePrecisionMode value.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
      <exception cref="T:System.ArgumentException">ProcessSpecialValues is true,
            and the yData (parameter) value at a particular index and its corresponding x value are special values.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotWaveform``1(NationalInstruments.AnalogWaveform{``0})">
      <summary>
            Plots AnalogWaveform&lt;T&gt; data using the default plot options.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveform">
            The AnalogWaveform&lt;T&gt; to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveform (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotWaveform``1(NationalInstruments.AnalogWaveform{``0},NationalInstruments.UI.AnalogWaveformPlotOptions)">
      <summary>
            Plots AnalogWaveform&lt;T&gt; data using the specified plot options.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveform">
            The AnalogWaveform&lt;T&gt; to plot.
            </param>
      <param name="options">
            The AnalogWaveformPlotOptions that specifies whether the waveform is 
            plotted against time or against waveform sample units. This parameter
            also specifies whether the waveform data is Raw
            or Scaled.
            This parameter also specifies whether PrecisionWaveformTiming or WaveformTiming
            is used while plotting the waveform data against time.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveform (parameter) is null.
            
            -or-
            options (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotWaveformAppend``1(NationalInstruments.AnalogWaveform{``0})">
      <summary>
            Plots AnalogWaveform&lt;T&gt; data  by 
            appending the waveform to the existing data.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveform">
            The AnalogWaveform&lt;T&gt; to append.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveform (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotWaveformAppend``1 is called after calling
            PlotX,
            PlotXAppend,
            PlotY,
            PlotYAppend,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotWaveforms``1(NationalInstruments.AnalogWaveform{``0}[])">
      <summary>
            Plots a 1D array of AnalogWaveform&lt;T&gt; data against the waveform sample units.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveforms">
            The 1D array of AnalogWaveform&lt;T&gt; data to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveforms (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotWaveforms``1(NationalInstruments.AnalogWaveform{``0}[],NationalInstruments.UI.AnalogWaveformPlotOptions)">
      <summary>
            Plots a 1D array of AnalogWaveform&lt;T&gt; data against the waveform sample units or against 
            time.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveforms">
            The 1D array of AnalogWaveform&lt;T&gt; data to plot.
            </param>
      <param name="options">
            The AnalogWaveformPlotOptions that specifies whether the waveform is 
            plotted against time or against waveform sample units. This parameter
            also specifies whether the waveform data is Raw
            or Scaled.
            This parameter also specifies whether PrecisionWaveformTiming or WaveformTiming
            is used while plotting the waveform data against time.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveforms (parameter) is null.
            
            -or-
            options (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotWaveformsAppend``1(NationalInstruments.AnalogWaveform{``0}[])">
      <summary>
            Plots an array of AnalogWaveform&lt;T&gt; data by appending the waveforms to the 
            existing data.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveforms">
            The array of AnalogWaveform&lt;T&gt; data to append.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveforms (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotWaveformAppend``1 is called after calling
            PlotX,
            PlotXAppend,
            PlotY,
            PlotYAppend,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotWaveformsMultiple``1(NationalInstruments.AnalogWaveform{``0}[0:,0:])">
      <summary>
            Plots a 2D array of AnalogWaveform&lt;T&gt; data against the waveform sample units.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveforms">
            The 2D array of AnalogWaveform&lt;T&gt; data to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveforms (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotWaveformsMultiple``1(NationalInstruments.AnalogWaveform{``0}[0:,0:],NationalInstruments.UI.AnalogWaveformPlotOptions)">
      <summary>
            Plots a 2D array of AnalogWaveform&lt;T&gt; data against the waveform sample units or against 
            time.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveforms">
            The 2D array of AnalogWaveform&lt;T&gt; data to plot.
            </param>
      <param name="options">
            The AnalogWaveformPlotOptions that specifies whether the waveform is 
            plotted against time or against waveform sample units. This parameter
            also specifies whether the waveform data is Raw
            or Scaled.
            This parameter also specifies whether PrecisionWaveformTiming or WaveformTiming
            is used while plotting the waveform data against time.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveforms (parameter) is null.
            
            -or-
            options (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotWaveformsAppendMultiple``1(NationalInstruments.AnalogWaveform{``0}[0:,0:])">
      <summary>
            Plots a 2D array of AnalogWaveform&lt;T&gt; data by appending the waveforms against the existing data.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveforms">
            The 2D array of AnalogWaveform&lt;T&gt; data to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveforms (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotWaveformAppend``1 is called after calling
            PlotX,
            PlotXAppend,
            PlotY,
            PlotYAppend,
            PlotComplexWaveform``1, or
            PlotComplexWaveformAppend``1.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotComplexWaveform``1(NationalInstruments.ComplexWaveform{``0})">
      <summary>
            Plots ComplexWaveform&lt;T&gt; data using default plot options.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveform">
            The ComplexWaveform&lt;T&gt; to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveform (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotComplexWaveform``1(NationalInstruments.ComplexWaveform{``0},NationalInstruments.UI.ComplexWaveformPlotOptions)">
      <summary>
            Plots ComplexWaveform&lt;T&gt; data using the specified 
            plot options.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveform">
            The ComplexWaveform&lt;T&gt; to plot.
            </param>
      <param name="options">
            The ComplexWaveformPlotOptions that specifies whether the waveform is 
            plotted against time or against waveform sample units. This parameter
            also specifies whether the waveform data is Raw
            or Scaled and specifies whether the part of complex data plotted on YAxes is Real,
            Imaginary, Phase, or Magnitude.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveform (parameter) is null.
            
            -or-
            options (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotComplexWaveformAppend``1(NationalInstruments.ComplexWaveform{``0})">
      <summary>
            Plots ComplexWaveform&lt;T&gt; data  by 
            appending the waveform to the existing data.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveform">
            The ComplexWaveform&lt;T&gt; to append.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveform (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotComplexWaveformAppend``1 is called after calling
            PlotX,
            PlotXAppend,
            PlotY, 
            PlotYAppend,
            PlotWaveform``1, or
            PlotWaveformAppend``1.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotComplexWaveforms``1(NationalInstruments.ComplexWaveform{``0}[])">
      <summary>
            Plots a 1D array of ComplexWaveform&lt;T&gt; data using default plot options.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveforms">
            The 1D array of ComplexWaveform&lt;T&gt; data to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveforms (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotComplexWaveforms``1(NationalInstruments.ComplexWaveform{``0}[],NationalInstruments.UI.ComplexWaveformPlotOptions)">
      <summary>
            Plots a 1D array of ComplexWaveform&lt;T&gt; data using the specified 
            plot options.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveforms">
            The 1D array of ComplexWaveform&lt;T&gt; data to plot.
            </param>
      <param name="options">
            The ComplexWaveformPlotOptions that specifies whether the waveform is 
            plotted against time or against waveform sample units. This parameter
            also specifies whether the waveform data is Raw
            or Scaled and specifies whether the part of complex data plotted on YAxes is Real,
            Imaginary, Phase, or Magnitude.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveforms (parameter) is null.
            
            -or-
            options (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotComplexWaveformsAppend``1(NationalInstruments.ComplexWaveform{``0}[])">
      <summary>
            Plots an array of ComplexWaveform&lt;T&gt; data by appending the waveforms to the 
            existing data.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveforms">
            The array of ComplexWaveform&lt;T&gt; data to append.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveforms (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotComplexWaveformAppend``1 is called after calling
            PlotX,
            PlotXAppend,
            PlotY, 
            PlotYAppend,
            PlotWaveform``1, or
            PlotWaveformAppend``1.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotComplexWaveformsMultiple``1(NationalInstruments.ComplexWaveform{``0}[0:,0:])">
      <summary>
            Plots a 2D array of ComplexWaveform&lt;T&gt; data using default plot options.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveforms">
            The 2D array of ComplexWaveform&lt;T&gt; data to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveforms (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotComplexWaveformsMultiple``1(NationalInstruments.ComplexWaveform{``0}[0:,0:],NationalInstruments.UI.ComplexWaveformPlotOptions)">
      <summary>
            Plots a 2D array of ComplexWaveform&lt;T&gt; data using the specified 
            plot options.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveforms">
            The 2D array of ComplexWaveform&lt;T&gt; data to plot.
            </param>
      <param name="options">
            The ComplexWaveformPlotOptions that specifies whether the waveform is 
            plotted against time or against waveform sample units. This parameter
            also specifies whether the waveform data is Raw
            or Scaled and specifies whether the part of complex data plotted on YAxes is Real,
            Imaginary, Phase, or Magnitude.</param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveforms (parameter) is null.
            
            -or-
            options (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotComplexWaveformsAppendMultiple``1(NationalInstruments.ComplexWaveform{``0}[0:,0:])">
      <summary>
            Plots a 2D array of ComplexWaveform&lt;T&gt; data by appending the waveforms against the existing data.
            </summary>
      <typeparam name="TData">
            The underlying type of the waveform. 
            </typeparam>
      <param name="waveforms">
            The 2D array of ComplexWaveform&lt;T&gt; data to plot.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">waveforms (parameter) is null.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            		The XAxis of the plot is null.
            
            -or-
            
            		The YAxis of the plot is null.
            
            -or-
            PlotComplexWaveformAppend``1 is called after calling
            PlotX,
            PlotXAppend,
            PlotY, 
            PlotYAppend,
            PlotWaveform``1, or
            PlotWaveformAppend``1.
            </exception>
      <exception cref="T:System.NotSupportedException">
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of XAxis.
            
            -or-
            
            The Owner of the plot is not null,
            and the Owner of the plot is
            different from the Owner of YAxis.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.WaveformGraph.Plots">
      <summary>
            Gets the collection of plots on the graph.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotLineColorGenerator">
      <summary>
            Gets or sets the ColorGenerator that assigns different colors to plots.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.WaveformGraph.UseColorGenerator">
      <summary>
            Gets or sets whether PlotLineColorGenerator is enabled or disabled. 
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.WaveformGraph.BindingMethod">
      <summary>
            Gets or sets the method to call when binding to a data source.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a BindableWaveformGraphMethod
            value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.WaveformGraph.BindingStart">
      <summary>
            Gets or sets the starting x or y value when binding to a data source.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.WaveformGraph.BindingIncrement">
      <summary>
            Gets or sets the value to increment x or y values when binding to a data source.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.WaveformGraph.BindingDataOrientation">
      <summary>
            Gets or sets the orientation of data in a 2D 
            array when binding to a data source.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a valid DataOrientation
            value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.WaveformGraph.BindingData">
      <summary>
            Gets or sets the data when binding to a data source.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.WaveformGraph.DefaultDataOrientation">
      <summary>
            Gets or sets the default orientation of values in a 2D array.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.WaveformGraph.PlotLineColorGeneratorChanged">
      <summary>
            Occurs when the PlotLineColorGenerator property  is changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.WaveformGraph.UseColorGeneratorChanged">
      <summary>
            Occurs when the UseColorGenerator property  is changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.WaveformGraph.BindingMethodChanged">
      <summary>
            Occurs when the value of BindingMethod
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.WaveformGraph.BindingStartChanged">
      <summary>
            Occurs when the value of BindingStart
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.WaveformGraph.BindingIncrementChanged">
      <summary>
            Occurs when the value of BindingIncrement
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.WaveformGraph.BindingDataOrientationChanged">
      <summary>
            Occurs when the value of BindingDataOrientation
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.WaveformGraph.DefaultDataOrientationChanged">
      <summary>
            Occurs when the value of DefaultDataOrientation
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.PropertyEditor">
      <summary>
            Represents the class for a Measurement Studio .NET Windows Forms control that edits property values at run time.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.#ctor">
      <summary>
            Initializes a new instance of the PropertyEditor class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.#ctor(System.Object,System.String)">
      <summary>
            Initializes a new instance of the PropertyEditor class
            with the specified object and the property name representing the property to edit at run time.
            </summary>
      <param name="obj">
            The object whose property is edited at run time.
            </param>
      <param name="propertyName">
            The name of the property whose value is edited at run time.
            </param>
      <exception cref="T:System.ArgumentNullException">obj (parameter) is null.
            
            -or-
            propertyName (parameter) is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">propertyName (parameter) is Empty.
            </exception>
      <exception cref="T:System.ArgumentException">obj (parameter) does not contain a property with the name
            specified in propertyName (parameter).
            
            -or-
            propertyName (parameter) is only a design time property.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the PropertyEditor 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnTextChanged(System.EventArgs)">
      <summary>
            Raises the TextChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>
            Raises the Validating event.
            </summary>
      <param name="e">
            A CancelEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.EditValue">
      <summary>
            Edits the value of the property by launching the associated editor.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnBorderStyleChanged(System.EventArgs)">
      <summary>
            Raises the BorderStyleChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnTextAlignChanged(System.EventArgs)">
      <summary>
            Raises the TextAlignChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnInteractionModeChanged(System.EventArgs)">
      <summary>
            Raises the InteractionModeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnDisplayModeChanged(System.EventArgs)">
      <summary>
            Raises the DisplayModeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnSourceChanged(System.EventArgs)">
      <summary>
            Raises the SourceChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnSourceValueChanged(System.EventArgs)">
      <summary>
            Raises the SourceValueChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnSourceValueWarning(NationalInstruments.UI.PropertyEditorSourceValueWarningEventArgs)">
      <summary>
            Raises the SourceValueWarning
            event.
            </summary>
      <param name="e">
            A PropertyEditorSourceValueWarningEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnRenderModeChanged(System.EventArgs)">
      <summary>
            Raises the RenderModeChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.ThrowExceptionIfDisposed">
      <summary>
            Throws an ObjectDisposedException if the object has been disposed.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Paints the control.
            </summary>
      <param name="e">
            A PaintEventArgs that contains information about the control to paint.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnSystemColorsChanged(System.EventArgs)">
      <summary>
            Raises the SystemColorsChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnCursorChanged(System.EventArgs)">
      <summary>
            Raises the CursorChanged
            event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnHandleCreated(System.EventArgs)">
      <summary>
            Raises the HandleCreated event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnLeave(System.EventArgs)">
      <summary>
            Raises the Leave event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnGotFocus(System.EventArgs)">
      <summary>
            Raises the GotFocus event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Raises the MouseDown event.
            </summary>
      <param name="e">
            A MouseEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Raises the MouseWheel event.
            </summary>
      <param name="e">
            A MouseEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>
            Processes a dialog key.
            </summary>
      <param name="keyData">
            A Keys value that represents the key to process.
            </param>
      <returns>true if the key was processed by the control.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            Raises the KeyDown event.
            </summary>
      <param name="e">
            A KeyEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Sets the bounds of the control to the specified values.
            </summary>
      <param name="x">
            The x-coordinate of the upper-left corner of the control.
            </param>
      <param name="y">
            The y-coordinate of the upper-left corner of the control.
            </param>
      <param name="width">
            The width of the control.
            </param>
      <param name="height">
            The height of the control.
            </param>
      <param name="specified">
            A bitwise combination of the BoundsSpecified values.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnLostFocus(System.EventArgs)">
      <summary>
            Raises the LostFocus event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnMouseEnter(System.EventArgs)">
      <summary>
            Raises the MouseEnter event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.PropertyEditor.OnMouseLeave(System.EventArgs)">
      <summary>
            Raises the MouseLeave event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.DefaultSize">
      <summary>
            Gets the default size of the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.BackgroundImage">
      <summary>
            Gets or sets the image to display in the background of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.ForeColor">
      <summary>
            Gets or sets the foreground color of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.BackColor">
      <summary>
            Gets or sets the background color of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.AutoSize">
      <summary>
            Gets or sets a value indicating whether the control is automatically resized to display its entire contents.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.BorderStyle">
      <summary>
            Gets or sets the style used to draw the border of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a BorderStyle value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.Text">
      <summary>
            Gets or sets the text associated with the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.TextAlign">
      <summary>
            Gets or sets whether the text aligns in the center of the control, on the left of the control, or on the right of the control.</summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a HorizontalAlignment value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.InteractionMode">
      <summary>
            Gets or sets the interactions supported by the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a PropertyEditorInteractionMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.DisplayMode">
      <summary>
            Gets or sets whether the property editor displays a painted representation of the value, a textual representation of the value, or both.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is not a PropertyEditorDisplayMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.RenderMode">
      <summary>
            Gets or sets the style used to draw the PropertyEditor.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value is a PropertyEditorRenderMode value.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.Source">
      <summary>
            Gets or sets the source that represents the property to be edited at run time.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.SourceValue">
      <summary>
            Gets or sets the value of the property.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.FormattedSourceValue">
      <summary>
            Gets the string representation of the property value.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.Focused">
      <summary>
            Gets a value indicating whether the control has input focus.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.IsEditingValue">
      <summary>
            Gets a value indicating if the PropertyEditor
            is currently editing the value of the property using the associated editor.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.PropertyEditor.BorderStyleChanged">
      <summary>
            Occurs when the value of BorderStyle changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.PropertyEditor.TextAlignChanged">
      <summary>
            Occurs when the value of TextAlign changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.PropertyEditor.InteractionModeChanged">
      <summary>
            Occurs when the value of InteractionMode changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.PropertyEditor.DisplayModeChanged">
      <summary>
            Occurs when the value of DisplayMode changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.PropertyEditor.SourceChanged">
      <summary>
            Occurs when the value of Source changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.PropertyEditor.SourceValueChanged">
      <summary>
            Occurs when the value of SourceValue changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.PropertyEditor.SourceValueWarning">
      <summary>
            Occurs when the SourceValue changes
            to a value that cannot be converted from its corresponding string representation.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.PropertyEditor.RenderModeChanged">
      <summary>
            Occurs when the value of RenderMode changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.CreateParams">
      <summary>
            Gets the required creation parameters when the control handle is created.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.PropertyEditor.Font">
      <summary>
            Gets or sets the font to apply to the text that is displayed by the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.Thermometer">
      <summary>
            Represents a Measurement Studio Windows Forms thermometer control to display numeric
            values.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Thermometer.#ctor">
      <summary>
            Initializes a new instance of the Thermometer class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Thermometer.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the Thermometer 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Thermometer.OnMaximumBulbDiameterChanged(System.EventArgs)">
      <summary>
            Raises the MaximumBulbDiameterChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Thermometer.OnThermometerStyleChanged(System.EventArgs)">
      <summary>
            Raises the ThermometerStyleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Thermometer.DefaultSize">
      <summary>
            Gets the default size of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Thermometer.ThermometerStyle">
      <summary>
            Gets or sets the style that determines the appearance of the thermometer.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Thermometer.MaximumBulbDiameter">
      <summary>
            Gets or sets the maximum bulb diameter.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The specified value is less than or equal to zero.
            
            -or-
            
            The specified value is NaN, NegativeInfinity,
            or PositiveInfinity.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Thermometer.MaximumBulbDiameterChanged">
      <summary>
            Occurs when the value of MaximumBulbDiameter 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Thermometer.ThermometerStyleChanged">
      <summary>
            Occurs when the value of ThermometerStyle 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.Tank">
      <summary>
            Represents a Measurement Studio Windows Forms tank control to display numeric
            values.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Tank.#ctor">
      <summary>
            Initializes a new instance of the Tank class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Tank.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the Tank 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Tank.OnTankStyleChanged(System.EventArgs)">
      <summary>
            Raises the TankStyleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Tank.DefaultSize">
      <summary>
            Gets the default size of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Tank.TankStyle">
      <summary>
            Gets or sets the style that determines the appearance of the tank.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Tank.TankStyleChanged">
      <summary>
            Occurs when the value of TankStyle 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.Led">
      <summary>
            Represents a Measurement Studio Windows Forms LED control to display Boolean states.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Led.#ctor">
      <summary>
            Initializes a new instance of the Led class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Led.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by Led.
            </summary>
      <param name="disposing">
            If true, this method releases managed and unmanaged resources. If false, this method releases
            only unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Led.OnLedStyleChanged(System.EventArgs)">
      <summary>
            Raises the LedStyleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Led.OnBlinkModeChanged(System.EventArgs)">
      <summary>
            Raises the BlinkModeChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Led.OnBlinkIntervalChanged(System.EventArgs)">
      <summary>
            Raises the BlinkIntervalChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Led.OnCursorChanged(System.EventArgs)">
      <summary>
            Raises the CursorChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Led.Clone">
      <summary>
            Creates a new object that is a copy of this instance.
            </summary>
      <returns>
            A new object that is a copy of this instance.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Led.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
            Raises the PropertyChanged event.
            </summary>
      <param name="e">
            A PropertyChangedEventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Led.EnableBasePropertyChangedEvents">
      <summary>
            Enables PropertyChanged event 
            from being raised when the properties defined in the Control base class
            are changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Led.DisableBasePropertyChangedEvents">
      <summary>
            Disables PropertyChanged event 
            from being raised when the properties defined in the Control base class
            are changed.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Led.DefaultSize">
      <summary>
            Gets the default size of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Led.LedStyle">
      <summary>
            Gets or sets the visual style of the LED.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The specified value is null.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Led.BlinkInterval">
      <summary>
            Gets or sets the blink interval of the LED.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The specified value is less than or equal to zero.
            
            -or-
            TotalMilliseconds is greater than MaxValue.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Led.BlinkMode">
      <summary>
            Gets or sets when the LED control blinks.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The specified value is not an LedBlinkMode value.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Led.BlinkModeChanged">
      <summary>
            Occurs when the value of BlinkMode changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Led.BlinkIntervalChanged">
      <summary>
            Occurs when the value of BlinkInterval changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Led.LedStyleChanged">
      <summary>
            Occurs when the value of LedStyle changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed. </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Led.PropertyChanged">
      <summary>
            Occurs when a property on the control changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
    </member>
    <member name="T:NationalInstruments.UI.WindowsForms.Gauge">
      <summary>
            Represents a Measurement Studio Windows Forms gauge control to display numeric
            values.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Gauge.#ctor">
      <summary>
            Initializes a new instance of the Gauge class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Gauge.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the Gauge 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Gauge.OnSpindleColorChanged(System.EventArgs)">
      <summary>
            Raises the SpindleColorChanged event.
            </summary>
      <param name="e">
            An EventArgs object that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Gauge.OnSpindleVisibleChanged(System.EventArgs)">
      <summary>
            Raises the SpindleVisibleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="M:NationalInstruments.UI.WindowsForms.Gauge.OnGaugeStyleChanged(System.EventArgs)">
      <summary>
            Raises the GaugeStyleChanged event.
            </summary>
      <param name="e">
            An EventArgs that contains the event data.
            </param>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Gauge.DefaultSize">
      <summary>
            Gets the default size of the control.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Gauge.SpindleColor">
      <summary>
            Gets or sets the color of the base that connects the pointer to the gauge.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Gauge.SpindleVisible">
      <summary>
            Gets or sets a value indicating if the base that connects the pointer to the gauge is visible.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
    </member>
    <member name="P:NationalInstruments.UI.WindowsForms.Gauge.GaugeStyle">
      <summary>
            Gets or sets the style that determines the appearance of the gauge.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            The value is null.
            </exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Gauge.SpindleColorChanged">
      <summary>
            Occurs when the value of SpindleColor 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Gauge.SpindleVisibleChanged">
      <summary>
            Occurs when the value of SpindleVisible 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
    <member name="E:NationalInstruments.UI.WindowsForms.Gauge.GaugeStyleChanged">
      <summary>
            Occurs when the value of GaugeStyle 
            changes.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.</exception>
    </member>
  </members>
</doc>